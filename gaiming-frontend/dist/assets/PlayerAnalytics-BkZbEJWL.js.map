{"version":3,"file":"PlayerAnalytics-BkZbEJWL.js","sources":["../../src/pages/PlayerAnalytics.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { Card } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/Badge'\nimport { \n\n  DollarSign, \n  Clock, \n  Target,\n  AlertTriangle,\n\n  Gamepad2,\n\n\n\n  Download,\n  RefreshCw\n} from 'lucide-react'\nimport { apiService } from '@/services/api'\nimport { API_ENDPOINTS } from '@/config'\nimport { Line, Pie } from 'react-chartjs-2'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\ninterface PlayerAnalytics {\n  playerId: number\n  username: string\n  email: string\n  registrationDate: string\n  lastLoginDate: string\n  totalDeposits: number\n  totalBets: number\n  totalWins: number\n  totalGamesPlayed: number\n  favoriteGameTypes: string[]\n  riskLevel: number\n  vipLevel: number\n  averageSessionDuration: number\n  sessionsCount: number\n  conversionRate: number\n  lifetimeValue: number\n  churnRisk: number\n  recommendationEngagement: {\n    totalRecommendations: number\n    clickedRecommendations: number\n    playedRecommendations: number\n    ctr: number\n    conversionRate: number\n  }\n  gamePreferences: Array<{\n    gameType: string\n    playCount: number\n    totalBets: number\n    winRate: number\n  }>\n  activityTrend: Array<{\n    date: string\n    sessions: number\n    bets: number\n    wins: number\n  }>\n}\n\ninterface PlayerSegment {\n  segmentId: string\n  segmentName: string\n  description: string\n  playerCount: number\n  averageLTV: number\n  churnRate: number\n  characteristics: string[]\n}\n\nexport default function PlayerAnalytics() {\n  const [selectedPlayerId, setSelectedPlayerId] = useState<number>(1)\n  const [timeRange, setTimeRange] = useState<string>('30d')\n  const [searchTerm, setSearchTerm] = useState<string>('')\n\n  // Fetch player analytics\n  const { data: playerData, isLoading: _, refetch: refetchPlayer } = useQuery<PlayerAnalytics>({\n    queryKey: ['player-analytics', selectedPlayerId, timeRange],\n    queryFn: () => apiService.get(`${API_ENDPOINTS.PLAYERS.ANALYTICS(selectedPlayerId)}?timeRange=${timeRange}`),\n    enabled: !!selectedPlayerId,\n  })\n\n  // Fetch player segments\n  const { data: segments, isLoading: __ } = useQuery<PlayerSegment[]>({\n    queryKey: ['player-segments'],\n    queryFn: () => apiService.get('/analytics/player-segments'),\n  })\n\n  const getRiskLevelColor = (riskLevel: number) => {\n    if (riskLevel <= 2) return 'bg-green-100 text-green-800'\n    if (riskLevel <= 4) return 'bg-yellow-100 text-yellow-800'\n    return 'bg-red-100 text-red-800'\n  }\n\n  const getRiskLevelText = (riskLevel: number) => {\n    if (riskLevel <= 2) return 'Low Risk'\n    if (riskLevel <= 4) return 'Medium Risk'\n    return 'High Risk'\n  }\n\n  const getVIPLevelColor = (vipLevel: number) => {\n    if (vipLevel === 0) return 'bg-gray-100 text-gray-800'\n    if (vipLevel <= 2) return 'bg-blue-100 text-blue-800'\n    if (vipLevel <= 4) return 'bg-purple-100 text-purple-800'\n    return 'bg-yellow-100 text-yellow-800'\n  }\n\n  const getVIPLevelText = (vipLevel: number) => {\n    if (vipLevel === 0) return 'Standard'\n    if (vipLevel <= 2) return 'Bronze'\n    if (vipLevel <= 4) return 'Silver'\n    return 'Gold'\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  }\n\n  const formatDuration = (minutes: number) => {\n    const hours = Math.floor(minutes / 60)\n    const mins = Math.floor(minutes % 60)\n    return `${hours}h ${mins}m`\n  }\n\n  // Chart data for activity trend\n  const activityChartData = playerData ? {\n    labels: playerData.activityTrend.map(item => new Date(item.date).toLocaleDateString()),\n    datasets: [\n      {\n        label: 'Sessions',\n        data: playerData.activityTrend.map(item => item.sessions),\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        yAxisID: 'y',\n      },\n      {\n        label: 'Total Bets ($)',\n        data: playerData.activityTrend.map(item => item.bets),\n        borderColor: 'rgb(16, 185, 129)',\n        backgroundColor: 'rgba(16, 185, 129, 0.1)',\n        yAxisID: 'y1',\n      },\n    ],\n  } : null\n\n  // Chart data for game preferences\n  const gamePreferencesData = playerData ? {\n    labels: playerData.gamePreferences.map(pref => pref.gameType),\n    datasets: [\n      {\n        label: 'Play Count',\n        data: playerData.gamePreferences.map(pref => pref.playCount),\n        backgroundColor: [\n          'rgba(59, 130, 246, 0.8)',\n          'rgba(16, 185, 129, 0.8)',\n          'rgba(245, 158, 11, 0.8)',\n          'rgba(239, 68, 68, 0.8)',\n          'rgba(139, 92, 246, 0.8)',\n        ],\n      },\n    ],\n  } : null\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Player Analytics\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Deep insights into player behavior and engagement\n          </p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <Button variant=\"outline\" icon={<Download className=\"h-4 w-4\" />}>\n            Export Report\n          </Button>\n          <Button onClick={() => refetchPlayer()} variant=\"outline\" icon={<RefreshCw className=\"h-4 w-4\" />}>\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Player Selection and Filters */}\n      <Card className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Player ID\n            </label>\n            <Input\n              type=\"number\"\n              value={selectedPlayerId}\n              onChange={(e) => setSelectedPlayerId(Number(e.target.value))}\n              placeholder=\"Enter player ID\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Time Range\n            </label>\n            <select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n            >\n              <option value=\"7d\">Last 7 days</option>\n              <option value=\"30d\">Last 30 days</option>\n              <option value=\"90d\">Last 90 days</option>\n              <option value=\"1y\">Last year</option>\n            </select>\n          </div>\n\n          <Input\n            placeholder=\"Search players...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </Card>\n\n      {playerData && (\n        <>\n          {/* Player Overview */}\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div>\n                <h2 className=\"text-xl font-semibold\">{playerData.username}</h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">{playerData.email}</p>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  Registered: {new Date(playerData.registrationDate).toLocaleDateString()}\n                </p>\n              </div>\n              <div className=\"flex space-x-3\">\n                <Badge className={getRiskLevelColor(playerData.riskLevel)}>\n                  {getRiskLevelText(playerData.riskLevel)}\n                </Badge>\n                <Badge className={getVIPLevelColor(playerData.vipLevel)}>\n                  {getVIPLevelText(playerData.vipLevel)}\n                </Badge>\n              </div>\n            </div>\n\n            {/* Key Metrics */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"flex items-center\">\n                <DollarSign className=\"h-8 w-8 text-green-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Lifetime Value\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {formatCurrency(playerData.lifetimeValue)}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center\">\n                <Gamepad2 className=\"h-8 w-8 text-blue-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Games Played\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {playerData.totalGamesPlayed.toLocaleString()}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center\">\n                <Clock className=\"h-8 w-8 text-purple-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Avg Session\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {formatDuration(playerData.averageSessionDuration)}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center\">\n                <Target className=\"h-8 w-8 text-orange-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Rec CTR\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {(playerData.recommendationEngagement.ctr * 100).toFixed(1)}%\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Charts */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Activity Trend */}\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Activity Trend</h3>\n              {activityChartData && (\n                <Line\n                  data={activityChartData}\n                  options={{\n                    responsive: true,\n                    interaction: {\n                      mode: 'index' as const,\n                      intersect: false,\n                    },\n                    scales: {\n                      x: {\n                        display: true,\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        type: 'linear' as const,\n                        display: true,\n                        position: 'left' as const,\n                        title: {\n                          display: true,\n                          text: 'Sessions'\n                        }\n                      },\n                      y1: {\n                        type: 'linear' as const,\n                        display: true,\n                        position: 'right' as const,\n                        title: {\n                          display: true,\n                          text: 'Bets ($)'\n                        },\n                        grid: {\n                          drawOnChartArea: false,\n                        },\n                      },\n                    },\n                  }}\n                />\n              )}\n            </Card>\n\n            {/* Game Preferences */}\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Game Preferences</h3>\n              {gamePreferencesData && (\n                <Pie\n                  data={gamePreferencesData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: {\n                        position: 'bottom' as const,\n                      },\n                    },\n                  }}\n                />\n              )}\n            </Card>\n          </div>\n\n          {/* Recommendation Engagement */}\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Recommendation Engagement</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <p className=\"text-3xl font-bold text-blue-600\">\n                  {playerData.recommendationEngagement.totalRecommendations}\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Shown</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-3xl font-bold text-green-600\">\n                  {playerData.recommendationEngagement.clickedRecommendations}\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Clicked</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-3xl font-bold text-purple-600\">\n                  {playerData.recommendationEngagement.playedRecommendations}\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Played</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-3xl font-bold text-orange-600\">\n                  {(playerData.recommendationEngagement.conversionRate * 100).toFixed(1)}%\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Conversion</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Risk Assessment */}\n          {playerData.churnRisk > 0.7 && (\n            <Card className=\"p-6 border-red-200 bg-red-50 dark:bg-red-900/20\">\n              <div className=\"flex items-center\">\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                <div className=\"ml-3\">\n                  <h3 className=\"text-lg font-semibold text-red-800 dark:text-red-200\">\n                    High Churn Risk Detected\n                  </h3>\n                  <p className=\"text-red-700 dark:text-red-300\">\n                    This player has a {(playerData.churnRisk * 100).toFixed(1)}% probability of churning. \n                    Consider targeted retention campaigns.\n                  </p>\n                </div>\n              </div>\n            </Card>\n          )}\n        </>\n      )}\n\n      {/* Player Segments */}\n      {segments && (\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Player Segments</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {segments.map((segment) => (\n              <div\n                key={segment.segmentId}\n                className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\"\n              >\n                <h4 className=\"font-semibold text-lg mb-2\">{segment.segmentName}</h4>\n                <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-3\">\n                  {segment.description}\n                </p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Players:</span>\n                    <span className=\"font-medium\">{segment.playerCount.toLocaleString()}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Avg LTV:</span>\n                    <span className=\"font-medium\">{formatCurrency(segment.averageLTV)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Churn Rate:</span>\n                    <span className=\"font-medium\">{(segment.churnRate * 100).toFixed(1)}%</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  )\n}\n"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","PlayerAnalytics","selectedPlayerId","setSelectedPlayerId","useState","timeRange","setTimeRange","searchTerm","setSearchTerm","playerData","_","refetchPlayer","useQuery","apiService","API_ENDPOINTS","segments","__","getRiskLevelColor","riskLevel","getRiskLevelText","getVIPLevelColor","vipLevel","getVIPLevelText","formatCurrency","amount","formatDuration","minutes","hours","mins","activityChartData","item","gamePreferencesData","pref","jsxs","jsx","Button","Download","RefreshCw","Card","Input","e","Fragment","Badge","DollarSign","Gamepad2","Clock","Target","Line","Pie","AlertTriangle","segment"],"mappings":"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"}