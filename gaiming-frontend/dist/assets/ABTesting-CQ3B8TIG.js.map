{"version":3,"file":"ABTesting-CQ3B8TIG.js","sources":["../../src/pages/ABTesting.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Button } from '@/components/ui/Button'\nimport { Badge } from '@/components/ui/Badge'\nimport {\n  Plus,\n  Play,\n  Pause,\n  BarChart3,\n  Users,\n  Target,\n  TrendingUp,\n  Calendar,\n  Settings,\n  Eye,\n  Edit,\n  Trash2\n} from 'lucide-react'\n\ninterface ABTest {\n  id: string\n  name: string\n  description: string\n  status: 'draft' | 'running' | 'paused' | 'completed'\n  algorithm: string\n  trafficSplit: number\n  startDate: string\n  endDate?: string\n  participants: number\n  conversions: number\n  conversionRate: number\n  confidence: number\n}\n\nconst ABTesting: React.FC = () => {\n  const [activeTab, setActiveTab] = useState('overview')\n\n  // Mock A/B test data\n  const abTests: ABTest[] = [\n    {\n      id: '1',\n      name: 'Collaborative Filtering vs Matrix Factorization',\n      description: 'Testing collaborative filtering against matrix factorization for game recommendations',\n      status: 'running',\n      algorithm: 'collaborative-filtering',\n      trafficSplit: 50,\n      startDate: '2024-01-15',\n      participants: 1250,\n      conversions: 187,\n      conversionRate: 14.96,\n      confidence: 95.2\n    },\n    {\n      id: '2',\n      name: 'Personalized vs Popular Recommendations',\n      description: 'Comparing personalized recommendations with popularity-based suggestions',\n      status: 'completed',\n      algorithm: 'personalized',\n      trafficSplit: 30,\n      startDate: '2024-01-01',\n      endDate: '2024-01-14',\n      participants: 2100,\n      conversions: 315,\n      conversionRate: 15.0,\n      confidence: 98.7\n    },\n    {\n      id: '3',\n      name: 'Deep Learning Recommendation Engine',\n      description: 'Testing new deep learning model against current recommendation system',\n      status: 'draft',\n      algorithm: 'deep-learning',\n      trafficSplit: 25,\n      startDate: '2024-02-01',\n      participants: 0,\n      conversions: 0,\n      conversionRate: 0,\n      confidence: 0\n    }\n  ]\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'running': return 'default'\n      case 'completed': return 'secondary'\n      case 'paused': return 'error'\n      case 'draft': return 'outline'\n      default: return 'secondary'\n    }\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'running': return <Play className=\"h-3 w-3\" />\n      case 'completed': return <BarChart3 className=\"h-3 w-3\" />\n      case 'paused': return <Pause className=\"h-3 w-3\" />\n      case 'draft': return <Edit className=\"h-3 w-3\" />\n      default: return null\n    }\n  }\n\n  const runningTests = abTests.filter(test => test.status === 'running')\n  const completedTests = abTests.filter(test => test.status === 'completed')\n  const totalParticipants = abTests.reduce((sum, test) => sum + test.participants, 0)\n  const avgConversionRate = abTests.length > 0\n    ? abTests.reduce((sum, test) => sum + test.conversionRate, 0) / abTests.length\n    : 0\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">A/B Testing</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Manage and analyze A/B tests for recommendation algorithms\n          </p>\n        </div>\n        <Button>\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Create Test\n        </Button>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Tests</CardTitle>\n            <Play className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{runningTests.length}</div>\n            <p className=\"text-xs text-muted-foreground\">Currently running</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Participants</CardTitle>\n            <Users className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalParticipants.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">Across all tests</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Avg Conversion Rate</CardTitle>\n            <Target className=\"h-4 w-4 text-purple-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{avgConversionRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">All time average</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Completed Tests</CardTitle>\n            <BarChart3 className=\"h-4 w-4 text-orange-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{completedTests.length}</div>\n            <p className=\"text-xs text-muted-foreground\">With results</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Overview', icon: BarChart3 },\n            { id: 'running', label: 'Running Tests', icon: Play },\n            { id: 'completed', label: 'Completed', icon: Target },\n            { id: 'settings', label: 'Settings', icon: Settings }\n          ].map((tab) => {\n            const Icon = tab.icon\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                <Icon className=\"h-4 w-4 mr-2\" />\n                {tab.label}\n              </button>\n            )\n          })}\n        </nav>\n      </div>\n\n      {/* Content */}\n      {activeTab === 'overview' && (\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>All A/B Tests</CardTitle>\n              <CardDescription>Overview of all experiments and their performance</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {abTests.map((test) => (\n                  <div key={test.id} className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-3 mb-2\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">{test.name}</h3>\n                        <Badge variant={getStatusColor(test.status)}>\n                          {getStatusIcon(test.status)}\n                          <span className=\"ml-1 capitalize\">{test.status}</span>\n                        </Badge>\n                      </div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">{test.description}</p>\n                      <div className=\"flex items-center gap-4 text-xs text-gray-500 dark:text-gray-400\">\n                        <span className=\"flex items-center gap-1\">\n                          <Calendar className=\"h-3 w-3\" />\n                          Started {test.startDate}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Users className=\"h-3 w-3\" />\n                          {test.participants.toLocaleString()} participants\n                        </span>\n                        {test.status !== 'draft' && (\n                          <span className=\"flex items-center gap-1\">\n                            <TrendingUp className=\"h-3 w-3\" />\n                            {test.conversionRate.toFixed(1)}% conversion\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Eye className=\"h-4 w-4 mr-1\" />\n                        View\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Edit className=\"h-4 w-4 mr-1\" />\n                        Edit\n                      </Button>\n                      {test.status === 'draft' && (\n                        <Button variant=\"outline\" size=\"sm\">\n                          <Trash2 className=\"h-4 w-4 mr-1\" />\n                          Delete\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {activeTab === 'running' && (\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Running Tests</CardTitle>\n              <CardDescription>Currently active A/B tests and their real-time performance</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {runningTests.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Play className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No Running Tests</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">Start an A/B test to see real-time results here.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {runningTests.map((test) => (\n                    <div key={test.id} className=\"p-4 border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">{test.name}</h3>\n                        <div className=\"flex items-center gap-2\">\n                          <Badge variant=\"default\">\n                            <Play className=\"h-3 w-3 mr-1\" />\n                            Running\n                          </Badge>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Pause className=\"h-4 w-4 mr-1\" />\n                            Pause\n                          </Button>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Participants</p>\n                          <p className=\"text-lg font-semibold\">{test.participants.toLocaleString()}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Conversions</p>\n                          <p className=\"text-lg font-semibold\">{test.conversions}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Conversion Rate</p>\n                          <p className=\"text-lg font-semibold\">{test.conversionRate.toFixed(2)}%</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Confidence</p>\n                          <p className=\"text-lg font-semibold\">{test.confidence.toFixed(1)}%</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {activeTab === 'completed' && (\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Completed Tests</CardTitle>\n              <CardDescription>Historical A/B test results and insights</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {completedTests.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <BarChart3 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No Completed Tests</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">Complete some A/B tests to see results here.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {completedTests.map((test) => (\n                    <div key={test.id} className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">{test.name}</h3>\n                        <Badge variant=\"secondary\">\n                          <BarChart3 className=\"h-3 w-3 mr-1\" />\n                          Completed\n                        </Badge>\n                      </div>\n                      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Duration</p>\n                          <p className=\"text-sm font-medium\">{test.startDate} - {test.endDate}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Participants</p>\n                          <p className=\"text-lg font-semibold\">{test.participants.toLocaleString()}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Conversions</p>\n                          <p className=\"text-lg font-semibold\">{test.conversions}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Conversion Rate</p>\n                          <p className=\"text-lg font-semibold text-green-600\">{test.conversionRate.toFixed(2)}%</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Confidence</p>\n                          <p className=\"text-lg font-semibold\">{test.confidence.toFixed(1)}%</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {activeTab === 'settings' && (\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>A/B Testing Configuration</CardTitle>\n              <CardDescription>Configure global settings for A/B testing</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8\">\n                <Settings className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">Settings Panel</h3>\n                <p className=\"text-gray-600 dark:text-gray-400\">A/B testing configuration options coming soon...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ABTesting\n"],"names":["ABTesting","activeTab","setActiveTab","useState","abTests","getStatusColor","status","getStatusIcon","jsx","Play","BarChart3","Pause","Edit","runningTests","test","completedTests","totalParticipants","sum","avgConversionRate","jsxs","Button","Plus","Card","CardHeader","CardTitle","CardContent","Users","Target","Settings","tab","Icon","CardDescription","Badge","Calendar","TrendingUp","Eye","Trash2"],"mappings":"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"}