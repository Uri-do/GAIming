import{a as t}from"./api-DCB3q_mZ.js";const n={async getUsers(e={}){const s=new URLSearchParams;return e.page&&s.append("page",e.page.toString()),e.pageSize&&s.append("pageSize",e.pageSize.toString()),e.search&&s.append("search",e.search),e.isActive!==void 0&&s.append("isActive",e.isActive.toString()),await t.get(`/Users?${s.toString()}`)},async getUser(e){return await t.get(`/Users/${e}`)},async createUser(e){return await t.post("/Users",e)},async updateUser(e,s){return await t.put(`/Users/${e}`,s)},async deleteUser(e){await t.delete(`/Users/${e}`)},async getRoles(){return await t.get("/RoleManagement")},async getRole(e){return await t.get(`/RoleManagement/${e}`)},async createRole(e){return await t.post("/RoleManagement",e)},async updateRole(e,s){return await t.put(`/RoleManagement/${e}`,s)},async deleteRole(e){await t.delete(`/RoleManagement/${e}`)},async getPermissions(){return await t.get("/RoleManagement/permissions")},async assignRole(e,s){await t.post(`/Users/${e}/roles/${s}`)},async removeRole(e,s){await t.delete(`/Users/${e}/roles/${s}`)},async activateUser(e){await t.post(`/Users/${e}/activate`)},async deactivateUser(e){await t.post(`/Users/${e}/deactivate`)},async lockUser(e,s){await t.post(`/Users/${e}/lock`,{duration:s})},async unlockUser(e){await t.post(`/Users/${e}/unlock`)},async resetPassword(e){return await t.post(`/Users/${e}/reset-password`)},async forcePasswordChange(e){await t.post(`/Users/${e}/force-password-change`)},async bulkActivateUsers(e){await t.post("/Users/bulk/activate",{userIds:e})},async bulkDeactivateUsers(e){await t.post("/Users/bulk/deactivate",{userIds:e})},async bulkDeleteUsers(e){await t.post("/Users/bulk/delete",{userIds:e})},async bulkAssignRole(e,s){await t.post("/Users/bulk/assign-role",{userIds:e,roleId:s})},async bulkRemoveRole(e,s){await t.post("/Users/bulk/remove-role",{userIds:e,roleId:s})},async exportUsers(e="csv"){return await t.download(`/Users/export?format=${e}`)},async importUsers(e){return await t.upload("/Users/import",e)},async getUserActivity(e,s=30){return await t.get(`/Users/${e}/activity?days=${s}`)},async getUserSessions(e){return await t.get(`/Users/${e}/sessions`)},async terminateUserSessions(e){await t.post(`/Users/${e}/terminate-sessions`)}};export{n as u};
//# sourceMappingURL=userManagementApi-Cp6gFy_9.js.map
