{"version":3,"file":"PlayerDetail-eXHzx7cY.js","sources":["../../node_modules/lucide-react/dist/esm/icons/award.js","../../src/pages/PlayerDetail.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.303.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Award = createLucideIcon(\"Award\", [\n  [\"circle\", { cx: \"12\", cy: \"8\", r: \"6\", key: \"1vp47v\" }],\n  [\"path\", { d: \"M15.477 12.89 17 22l-5-3-5 3 1.523-9.11\", key: \"em7aur\" }]\n]);\n\nexport { Award as default };\n//# sourceMappingURL=award.js.map\n","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport {\n  ArrowLeft,\n  User,\n  MapPin,\n  Calendar,\n  Star,\n  Shield,\n  TrendingUp,\n  Activity,\n  DollarSign,\n  Clock,\n  Target,\n  BarChart3,\n  Gamepad2,\n  Award,\n  Settings\n} from 'lucide-react'\nimport { playerAnalyticsService, type PlayerAnalytics } from '@/services/playerAnalyticsService'\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/Card'\nimport Button from '@/components/ui/Button'\nimport Badge from '@/components/ui/Badge'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\n\nconst PlayerDetail: React.FC = () => {\n  const { playerId } = useParams<{ playerId: string }>()\n  const navigate = useNavigate()\n  const [player, setPlayer] = useState<PlayerAnalytics | null>(null)\n  const [dashboard, setDashboard] = useState<any>(null)\n  const [behavior, setBehavior] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n  const [dashboardLoading, setDashboardLoading] = useState(true)\n  const [behaviorLoading, setBehaviorLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    if (playerId) {\n      fetchPlayerData()\n      fetchPlayerDashboard()\n      fetchPlayerBehavior()\n    }\n  }, [playerId])\n\n  const fetchPlayerData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const playerData = await playerAnalyticsService.getPlayer(Number(playerId))\n      setPlayer(playerData)\n    } catch (err) {\n      console.error('Error fetching player data:', err)\n      setError(err instanceof Error ? err.message : 'Failed to fetch player data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchPlayerDashboard = async () => {\n    try {\n      setDashboardLoading(true)\n      const dashboardData = await playerAnalyticsService.getPlayerDashboard(Number(playerId))\n      setDashboard(dashboardData)\n    } catch (err) {\n      console.error('Error fetching player dashboard:', err)\n    } finally {\n      setDashboardLoading(false)\n    }\n  }\n\n  const fetchPlayerBehavior = async () => {\n    try {\n      setBehaviorLoading(true)\n      const behaviorData = await playerAnalyticsService.getPlayerBehavior(Number(playerId))\n      setBehavior(behaviorData)\n    } catch (err) {\n      console.error('Error fetching player behavior:', err)\n    } finally {\n      setBehaviorLoading(false)\n    }\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount)\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const getVipLevelColor = (level: number) => {\n    if (level >= 5) return 'bg-purple-500 text-white'\n    if (level >= 3) return 'bg-yellow-500 text-white'\n    if (level >= 1) return 'bg-blue-500 text-white'\n    return 'bg-gray-500 text-white'\n  }\n\n  const getRiskLevelColor = (level: number) => {\n    if (level >= 4) return 'bg-red-500 text-white'\n    if (level >= 3) return 'bg-orange-500 text-white'\n    if (level >= 2) return 'bg-yellow-500 text-white'\n    return 'bg-green-500 text-white'\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/players')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Players\n          </Button>\n        </div>\n        <Card variant=\"gaming\" className=\"text-center\">\n          <CardContent className=\"p-8\">\n            <LoadingSpinner size=\"xl\" variant=\"gaming\" />\n            <p className=\"text-gray-300 mt-4 text-lg\">Loading player details...</p>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (error || !player) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/players')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Players\n          </Button>\n        </div>\n        <Card variant=\"gaming\" className=\"border-error-500/30\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <User className=\"w-5 h-5 text-error-400\" />\n              Error Loading Player\n            </CardTitle>\n            <CardDescription className=\"text-gray-400\">\n              {error || 'Player not found'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Button\n              variant=\"destructive\"\n              onClick={fetchPlayerData}\n              icon={<TrendingUp />}\n            >\n              Retry Loading\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/players')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Players\n          </Button>\n          <div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              {player.username}\n            </h1>\n            <p className=\"text-gray-400 mt-1\">\n              {player.firstName && player.lastName ? `${player.firstName} ${player.lastName}` : player.email}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex gap-3\">\n          <Button variant=\"outline\" icon={<Settings className=\"w-4 h-4\" />}>\n            Manage Player\n          </Button>\n          <Button variant=\"primary\" icon={<BarChart3 className=\"w-4 h-4\" />}>\n            View Analytics\n          </Button>\n        </div>\n      </div>\n\n      {/* Player Overview Cards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Player Profile */}\n        <div className=\"lg:col-span-2\">\n          <Card variant=\"gaming\" glow>\n            <CardHeader variant=\"gaming\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <User className=\"w-5 h-5 text-primary-400\" />\n                Player Profile\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center gap-4 mb-6\">\n                <div className=\"w-16 h-16 rounded-full bg-gradient-to-br from-primary-500 to-purple-500 flex items-center justify-center\">\n                  <span className=\"text-2xl font-bold text-white\">\n                    {player.username.charAt(0).toUpperCase()}\n                  </span>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-semibold text-white\">{player.username}</h3>\n                  <p className=\"text-gray-400\">{player.email}</p>\n                  {player.firstName && player.lastName && (\n                    <p className=\"text-gray-300\">{player.firstName} {player.lastName}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">Player ID</label>\n                  <p className=\"text-white font-medium\">{player.playerId}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Status</label>\n                  <div className=\"flex items-center gap-2\">\n                    <Badge variant={player.isActive ? 'success' : 'error'}>\n                      {player.isActive ? 'Active' : 'Inactive'}\n                    </Badge>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Country</label>\n                  <p className=\"text-white font-medium flex items-center gap-1\">\n                    <MapPin className=\"w-4 h-4 text-gray-400\" />\n                    {player.country || 'N/A'}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Segment</label>\n                  <Badge variant=\"secondary\">{player.playerSegment}</Badge>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">VIP Level</label>\n                  <Badge className={getVipLevelColor(player.vipLevel)}>\n                    <Star className=\"w-3 h-3 mr-1\" />\n                    VIP {player.vipLevel}\n                  </Badge>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Risk Level</label>\n                  <Badge className={getRiskLevelColor(player.riskLevel)}>\n                    <Shield className=\"w-3 h-3 mr-1\" />\n                    Risk {player.riskLevel}\n                  </Badge>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-sm text-gray-400\">Registration Date</label>\n                <p className=\"text-white font-medium flex items-center gap-1\">\n                  <Calendar className=\"w-4 h-4 text-gray-400\" />\n                  {formatDate(player.registrationDate)}\n                </p>\n              </div>\n\n              {player.lastLoginDate && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Last Login</label>\n                  <p className=\"text-white font-medium flex items-center gap-1\">\n                    <Clock className=\"w-4 h-4 text-gray-400\" />\n                    {formatDate(player.lastLoginDate)}\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Gaming Statistics */}\n          <Card variant=\"gaming\" glow>\n            <CardHeader variant=\"gaming\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <BarChart3 className=\"w-5 h-5 text-primary-400\" />\n                Gaming Statistics\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <Activity className=\"w-4 h-4 text-blue-400\" />\n                    <span className=\"text-sm text-gray-400\">Sessions</span>\n                  </div>\n                  <span className=\"text-white font-medium\">{player.totalSessions.toLocaleString()}</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <DollarSign className=\"w-4 h-4 text-green-400\" />\n                    <span className=\"text-sm text-gray-400\">Total Bets</span>\n                  </div>\n                  <span className=\"text-white font-medium\">{formatCurrency(player.totalBets)}</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <TrendingUp className=\"w-4 h-4 text-purple-400\" />\n                    <span className=\"text-sm text-gray-400\">Total Wins</span>\n                  </div>\n                  <span className=\"text-white font-medium\">{formatCurrency(player.totalWins)}</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <Target className=\"w-4 h-4 text-orange-400\" />\n                    <span className=\"text-sm text-gray-400\">Revenue</span>\n                  </div>\n                  <span className=\"text-white font-medium\">{formatCurrency(player.totalRevenue)}</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Performance Metrics */}\n          <Card variant=\"gaming\">\n            <CardHeader variant=\"gaming\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <Award className=\"w-5 h-5 text-primary-400\" />\n                Performance Metrics\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Lifetime Value</span>\n                  <span className=\"text-white font-medium\">{formatCurrency(player.lifetimeValue)}</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Avg Session Duration</span>\n                  <span className=\"text-white font-medium\">{player.averageSessionDuration.toFixed(1)} min</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Avg Bet Size</span>\n                  <span className=\"text-white font-medium\">{formatCurrency(player.averageBetSize)}</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Retention Score</span>\n                  <span className=\"text-white font-medium\">{(player.retentionScore * 100).toFixed(1)}%</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Engagement Score</span>\n                  <span className=\"text-white font-medium\">{player.engagementScore.toFixed(1)}/100</span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Risk Score</span>\n                  <span className=\"text-white font-medium\">{player.riskScore.toFixed(1)}/100</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Game Preferences and Dashboard */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Game Preferences */}\n        <Card variant=\"gaming\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <Gamepad2 className=\"w-5 h-5 text-primary-400\" />\n              Game Preferences\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"text-sm text-gray-400\">Favorite Game Types</label>\n                <div className=\"flex flex-wrap gap-2 mt-1\">\n                  {player.favoriteGameTypes.map((type, index) => (\n                    <Badge key={index} variant=\"outline\">\n                      {type}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-sm text-gray-400\">Preferred Providers</label>\n                <div className=\"flex flex-wrap gap-2 mt-1\">\n                  {player.preferredProviders.map((provider, index) => (\n                    <Badge key={index} variant=\"secondary\">\n                      {provider}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Player Dashboard Data */}\n        <Card variant=\"gaming\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <BarChart3 className=\"w-5 h-5 text-primary-400\" />\n              Dashboard Overview\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {dashboardLoading ? (\n              <div className=\"text-center py-8\">\n                <LoadingSpinner variant=\"gaming\" />\n                <p className=\"text-gray-400 mt-2\">Loading dashboard...</p>\n              </div>\n            ) : dashboard ? (\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                  <span className=\"text-sm text-gray-400\">Dashboard Period</span>\n                  <span className=\"text-white font-medium\">\n                    {dashboard.startDate ? new Date(dashboard.startDate).toLocaleDateString() : 'N/A'} -\n                    {dashboard.endDate ? new Date(dashboard.endDate).toLocaleDateString() : 'N/A'}\n                  </span>\n                </div>\n\n                {dashboard.overview && (\n                  <>\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <span className=\"text-sm text-gray-400\">Total Play Time</span>\n                      <span className=\"text-white font-medium\">{dashboard.overview.totalPlayTime || 'N/A'}</span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <span className=\"text-sm text-gray-400\">Games Played</span>\n                      <span className=\"text-white font-medium\">{dashboard.overview.gamesPlayed || 'N/A'}</span>\n                    </div>\n                  </>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <BarChart3 className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\n                <p className=\"text-gray-400\">No dashboard data available</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Behavior Analysis */}\n      {behavior && (\n        <Card variant=\"gaming\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <Activity className=\"w-5 h-5 text-primary-400\" />\n              Behavior Analysis\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {behaviorLoading ? (\n              <div className=\"text-center py-8\">\n                <LoadingSpinner variant=\"gaming\" />\n                <p className=\"text-gray-400 mt-2\">Loading behavior analysis...</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-white mb-1\">{behavior.riskScore?.toFixed(1) || 'N/A'}</div>\n                  <div className=\"text-sm text-gray-400\">Risk Score</div>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-white mb-1\">{behavior.username || player.username}</div>\n                  <div className=\"text-sm text-gray-400\">Player Username</div>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-white mb-1\">\n                    {behavior.lastAnalyzed ? new Date(behavior.lastAnalyzed).toLocaleDateString() : 'N/A'}\n                  </div>\n                  <div className=\"text-sm text-gray-400\">Last Analyzed</div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default PlayerDetail\n"],"names":["Award","createLucideIcon","PlayerDetail","playerId","useParams","navigate","useNavigate","player","setPlayer","useState","dashboard","setDashboard","behavior","setBehavior","loading","setLoading","dashboardLoading","setDashboardLoading","behaviorLoading","setBehaviorLoading","error","setError","useEffect","fetchPlayerData","fetchPlayerDashboard","fetchPlayerBehavior","playerData","playerAnalyticsService","err","dashboardData","behaviorData","formatCurrency","amount","formatDate","dateString","getVipLevelColor","level","getRiskLevelColor","jsxs","jsx","Button","ArrowLeft","Card","CardContent","LoadingSpinner","CardHeader","CardTitle","User","CardDescription","TrendingUp","Settings","BarChart3","Badge","MapPin","Star","Shield","Calendar","Clock","Activity","DollarSign","Target","Gamepad2","type","index","provider","Fragment","_a"],"mappings":"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","x_google_ignoreList":[0]}