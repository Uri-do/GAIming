{"version":3,"file":"GameDetail-DMm2h90q.js","sources":["../../src/pages/GameDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport {\n  ArrowLeft,\n  Edit,\n  BarChart3,\n  Users,\n  TrendingUp,\n  Star,\n  Monitor,\n  Smartphone,\n  Calendar,\n  DollarSign,\n  Activity,\n  Target,\n  Gamepad2\n} from 'lucide-react'\nimport { gameService } from '@/services/gameService'\nimport { Game } from '@/types'\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/Card'\nimport Button from '@/components/ui/Button'\nimport Badge from '@/components/ui/Badge'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\n\nconst GameDetail: React.FC = () => {\n  const { gameId } = useParams<{ gameId: string }>()\n  const navigate = useNavigate()\n  const [game, setGame] = useState<Game | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [stats, setStats] = useState<any>(null)\n  const [statsLoading, setStatsLoading] = useState(true)\n\n  useEffect(() => {\n    if (gameId) {\n      fetchGameDetails()\n      fetchGameStats()\n    }\n  }, [gameId])\n\n  const fetchGameDetails = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const gameData = await gameService.getGame(Number(gameId))\n      setGame(gameData)\n    } catch (err) {\n      console.error('Error fetching game details:', err)\n      setError(err instanceof Error ? err.message : 'Failed to fetch game details')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchGameStats = async () => {\n    try {\n      setStatsLoading(true)\n      const statsData = await gameService.getGameStats(Number(gameId))\n      setStats(statsData)\n    } catch (err) {\n      console.error('Error fetching game stats:', err)\n      // Don't set error for stats, just log it\n    } finally {\n      setStatsLoading(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/games')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Games\n          </Button>\n        </div>\n        <Card variant=\"gaming\" className=\"text-center\">\n          <CardContent className=\"p-8\">\n            <LoadingSpinner size=\"xl\" variant=\"gaming\" />\n            <p className=\"text-gray-300 mt-4 text-lg\">Loading game details...</p>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (error || !game) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/games')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Games\n          </Button>\n        </div>\n        <Card variant=\"gaming\" className=\"border-error-500/30\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <Gamepad2 className=\"w-5 h-5 text-error-400\" />\n              Error Loading Game\n            </CardTitle>\n            <CardDescription className=\"text-gray-400\">\n              {error || 'Game not found'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Button\n              variant=\"destructive\"\n              onClick={fetchGameDetails}\n              icon={<TrendingUp />}\n            >\n              Retry Loading\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate('/games')}\n            icon={<ArrowLeft className=\"w-4 h-4\" />}\n          >\n            Back to Games\n          </Button>\n          <div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              {game.gameName}\n            </h1>\n            <p className=\"text-gray-400 mt-1\">\n              {game.providerName || game.provider?.providerName} â€¢ {game.gameTypeName || game.gameType?.gameTypeName}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex gap-3\">\n          <Button variant=\"outline\" icon={<Edit className=\"w-4 h-4\" />}>\n            Edit Game\n          </Button>\n          <Button variant=\"primary\" icon={<BarChart3 className=\"w-4 h-4\" />}>\n            View Analytics\n          </Button>\n        </div>\n      </div>\n\n      {/* Game Info Cards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Game Info */}\n        <div className=\"lg:col-span-2\">\n          <Card variant=\"gaming\" glow>\n            <CardHeader variant=\"gaming\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <Gamepad2 className=\"w-5 h-5 text-primary-400\" />\n                Game Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">Game ID</label>\n                  <p className=\"text-white font-medium\">{game.gameId}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Status</label>\n                  <div className=\"flex items-center gap-2\">\n                    <Badge variant={game.isActive ? 'success' : 'error'}>\n                      {game.isActive ? 'Active' : 'Inactive'}\n                    </Badge>\n                    {game.hideInLobby && (\n                      <Badge variant=\"warning\">Hidden</Badge>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Platform Support</label>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    {game.isDesktop && (\n                      <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                        <Monitor className=\"w-3 h-3\" />\n                        Desktop\n                      </Badge>\n                    )}\n                    {game.isMobile && (\n                      <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                        <Smartphone className=\"w-3 h-3\" />\n                        Mobile\n                      </Badge>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">RTP</label>\n                  <p className=\"text-white font-medium\">\n                    {game.rtpPercentage ? `${game.rtpPercentage}%` : 'N/A'}\n                  </p>\n                </div>\n              </div>\n\n              {game.description && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Description</label>\n                  <p className=\"text-gray-300 mt-1\">{game.description}</p>\n                </div>\n              )}\n\n              {game.features && game.features.length > 0 && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Features</label>\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\n                    {game.features.map((feature, index) => (\n                      <Badge key={index} variant=\"outline\">\n                        {feature}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {game.tags && game.tags.length > 0 && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Tags</label>\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\n                    {game.tags.map((tag, index) => (\n                      <Badge key={index} variant=\"secondary\">\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Game Statistics */}\n        <div>\n          <Card variant=\"gaming\" glow>\n            <CardHeader variant=\"gaming\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <BarChart3 className=\"w-5 h-5 text-primary-400\" />\n                Statistics\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {statsLoading ? (\n                <div className=\"text-center py-8\">\n                  <LoadingSpinner variant=\"gaming\" />\n                  <p className=\"text-gray-400 mt-2\">Loading stats...</p>\n                </div>\n              ) : stats ? (\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 gap-3\">\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <Users className=\"w-4 h-4 text-blue-400\" />\n                        <span className=\"text-sm text-gray-400\">Total Players</span>\n                      </div>\n                      <span className=\"text-white font-medium\">{stats.totalPlayers?.toLocaleString() || 'N/A'}</span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <Activity className=\"w-4 h-4 text-green-400\" />\n                        <span className=\"text-sm text-gray-400\">Active Players</span>\n                      </div>\n                      <span className=\"text-white font-medium\">{stats.activePlayers?.toLocaleString() || 'N/A'}</span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <Target className=\"w-4 h-4 text-purple-400\" />\n                        <span className=\"text-sm text-gray-400\">Total Sessions</span>\n                      </div>\n                      <span className=\"text-white font-medium\">{stats.totalSessions?.toLocaleString() || 'N/A'}</span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <DollarSign className=\"w-4 h-4 text-yellow-400\" />\n                        <span className=\"text-sm text-gray-400\">Revenue</span>\n                      </div>\n                      <span className=\"text-white font-medium\">\n                        {stats.totalRevenue ? `$${stats.totalRevenue.toLocaleString()}` : 'N/A'}\n                      </span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <Star className=\"w-4 h-4 text-orange-400\" />\n                        <span className=\"text-sm text-gray-400\">Avg Rating</span>\n                      </div>\n                      <span className=\"text-white font-medium\">\n                        {stats.averageRating ? `${stats.averageRating.toFixed(1)}/5` : 'N/A'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <BarChart3 className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\n                  <p className=\"text-gray-400\">No statistics available</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Additional Details */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Betting Limits */}\n        <Card variant=\"gaming\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <DollarSign className=\"w-5 h-5 text-primary-400\" />\n              Betting Limits\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"text-sm text-gray-400\">Minimum Bet</label>\n                <p className=\"text-white font-medium text-lg\">\n                  {game.minBetAmount ? `$${game.minBetAmount}` : 'N/A'}\n                </p>\n              </div>\n              <div>\n                <label className=\"text-sm text-gray-400\">Maximum Bet</label>\n                <p className=\"text-white font-medium text-lg\">\n                  {game.maxBetAmount ? `$${game.maxBetAmount}` : 'N/A'}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Game Metadata */}\n        <Card variant=\"gaming\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <Calendar className=\"w-5 h-5 text-primary-400\" />\n              Metadata\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"text-sm text-gray-400\">Release Date</label>\n                <p className=\"text-white font-medium\">\n                  {game.releaseDate ? new Date(game.releaseDate).toLocaleDateString() : 'N/A'}\n                </p>\n              </div>\n              <div>\n                <label className=\"text-sm text-gray-400\">Created</label>\n                <p className=\"text-white font-medium\">\n                  {new Date(game.createdDate).toLocaleDateString()}\n                </p>\n              </div>\n              <div>\n                <label className=\"text-sm text-gray-400\">Last Updated</label>\n                <p className=\"text-white font-medium\">\n                  {new Date(game.updatedDate).toLocaleDateString()}\n                </p>\n              </div>\n              {game.gameOrder && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Display Order</label>\n                  <p className=\"text-white font-medium\">{game.gameOrder}</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default GameDetail\n"],"names":["GameDetail","gameId","useParams","navigate","useNavigate","game","setGame","useState","loading","setLoading","error","setError","stats","setStats","statsLoading","setStatsLoading","useEffect","fetchGameDetails","fetchGameStats","gameData","gameService","err","statsData","jsxs","jsx","Button","ArrowLeft","Card","CardContent","LoadingSpinner","CardHeader","CardTitle","Gamepad2","CardDescription","TrendingUp","_a","_b","Edit","BarChart3","Badge","Monitor","Smartphone","feature","index","tag","Users","Activity","Target","DollarSign","Star","Calendar"],"mappings":"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"}