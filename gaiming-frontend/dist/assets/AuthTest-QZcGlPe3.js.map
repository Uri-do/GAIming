{"version":3,"file":"AuthTest-QZcGlPe3.js","sources":["../../src/components/test/AuthTest.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthStore } from '@/stores/authStore'\nimport { Button } from '@/components/ui/Button'\nimport { Input } from '@/components/ui/input'\nimport { Card } from '@/components/ui/Card'\n\n\nexport function AuthTest() {\n  const [username, setUsername] = useState('admin')\n  const [password, setPassword] = useState('Admin123!')\n  const [testResult, setTestResult] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const { login, logout, user, isAuthenticated, error } = useAuthStore()\n\n  const handleTestLogin = async () => {\n    setIsLoading(true)\n    setTestResult(null)\n    \n    try {\n      await login(username, password)\n      setTestResult('✅ Login successful!')\n    } catch (err) {\n      setTestResult(`❌ Login failed: ${err instanceof Error ? err.message : 'Unknown error'}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleTestLogout = () => {\n    logout()\n    setTestResult('✅ Logout successful!')\n  }\n\n  const testApiConnection = async () => {\n    setIsLoading(true)\n    setTestResult(null)\n    \n    try {\n      const response = await fetch('http://localhost:65073/api/health')\n      if (response.ok) {\n        setTestResult('✅ API connection successful!')\n      } else {\n        setTestResult(`❌ API connection failed: ${response.status} ${response.statusText}`)\n      }\n    } catch (err) {\n      setTestResult(`❌ API connection failed: ${err instanceof Error ? err.message : 'Unknown error'}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 space-y-6\">\n      <Card className=\"p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Authentication Test</h2>\n        \n        {/* API Connection Test */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold mb-2\">API Connection Test</h3>\n          <Button \n            onClick={testApiConnection}\n            loading={isLoading}\n            variant=\"outline\"\n          >\n            Test API Connection\n          </Button>\n        </div>\n\n        {/* Authentication Status */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold mb-2\">Current Status</h3>\n          <div className=\"space-y-2\">\n            <p><strong>Authenticated:</strong> {isAuthenticated ? '✅ Yes' : '❌ No'}</p>\n            {user && (\n              <div>\n                <p><strong>User:</strong> {user.name} ({user.email})</p>\n                <p><strong>Role:</strong> {user.role}</p>\n                <p><strong>Permissions:</strong> {user.permissions.join(', ') || 'None'}</p>\n              </div>\n            )}\n            {error && (\n              <div className=\"p-4 bg-red-50 dark:bg-red-900/20 rounded-md\">\n                <h4 className=\"font-semibold text-red-800 dark:text-red-200 mb-2\">\n                  Authentication Error\n                </h4>\n                <p className=\"text-red-700 dark:text-red-300\">{error}</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Login Form */}\n        {!isAuthenticated && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold mb-2\">Login Test</h3>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Username\n                </label>\n                <Input\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  placeholder=\"Enter username\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Password\n                </label>\n                <Input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Enter password\"\n                />\n              </div>\n              <Button \n                onClick={handleTestLogin}\n                loading={isLoading}\n                disabled={!username || !password}\n              >\n                Test Login\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Logout */}\n        {isAuthenticated && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold mb-2\">Logout Test</h3>\n            <Button \n              onClick={handleTestLogout}\n              variant=\"outline\"\n            >\n              Test Logout\n            </Button>\n          </div>\n        )}\n\n        {/* Test Result */}\n        {testResult && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold mb-2\">Test Result</h3>\n            <div className=\"p-4 bg-gray-100 dark:bg-gray-800 rounded-md\">\n              <pre className=\"text-sm\">{testResult}</pre>\n            </div>\n          </div>\n        )}\n\n        {/* Default Credentials */}\n        <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-md\">\n          <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">Default Test Credentials</h4>\n          <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n            <strong>Username:</strong> admin<br />\n            <strong>Password:</strong> Admin123!\n          </p>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default AuthTest\n"],"names":["AuthTest","username","setUsername","useState","password","setPassword","testResult","setTestResult","isLoading","setIsLoading","login","logout","user","isAuthenticated","error","useAuthStore","handleTestLogin","err","handleTestLogout","testApiConnection","response","jsxs","Card","jsx","Button","Input","e"],"mappings":"8KAOO,SAASA,GAAW,CACzB,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,OAAO,EAC1C,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,WAAW,EAC9C,CAACG,EAAYC,CAAa,EAAIJ,EAAAA,SAAwB,IAAI,EAC1D,CAACK,EAAWC,CAAY,EAAIN,EAAAA,SAAS,EAAK,EAE1C,CAAE,MAAAO,EAAO,OAAAC,EAAQ,KAAAC,EAAM,gBAAAC,EAAiB,MAAAC,GAAUC,EAAa,EAE/DC,EAAkB,SAAY,CAClCP,EAAa,EAAI,EACjBF,EAAc,IAAI,EAEd,GAAA,CACI,MAAAG,EAAMT,EAAUG,CAAQ,EAC9BG,EAAc,qBAAqB,QAC5BU,EAAK,CACZV,EAAc,mBAAmBU,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAE,CAAA,QACvF,CACAR,EAAa,EAAK,CAAA,CAEtB,EAEMS,EAAmB,IAAM,CACtBP,EAAA,EACPJ,EAAc,sBAAsB,CACtC,EAEMY,EAAoB,SAAY,CACpCV,EAAa,EAAI,EACjBF,EAAc,IAAI,EAEd,GAAA,CACI,MAAAa,EAAW,MAAM,MAAM,mCAAmC,EAC5DA,EAAS,GACXb,EAAc,8BAA8B,EAE5CA,EAAc,4BAA4Ba,EAAS,MAAM,IAAIA,EAAS,UAAU,EAAE,QAE7EH,EAAK,CACZV,EAAc,4BAA4BU,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAE,CAAA,QAChG,CACAR,EAAa,EAAK,CAAA,CAEtB,EAEA,aACG,MAAI,CAAA,UAAU,kCACb,SAACY,EAAA,KAAAC,EAAA,CAAK,UAAU,MACd,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAmB,sBAAA,EAG3DF,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAmB,sBAAA,EAC9DA,EAAA,IAACC,EAAA,CACC,QAASL,EACT,QAASX,EACT,QAAQ,UACT,SAAA,qBAAA,CAAA,CAED,EACF,EAGAa,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAc,iBAAA,EACzDF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAc,gBAAA,CAAA,EAAS,IAAEV,EAAkB,QAAU,MAAA,EAAO,EACtED,UACE,MACC,CAAA,SAAA,CAAAS,OAAC,IAAE,CAAA,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEX,EAAK,KAAK,KAAGA,EAAK,MAAM,GAAA,EAAC,SACnD,IAAE,CAAA,SAAA,CAAAW,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEX,EAAK,IAAA,EAAK,SACpC,IAAE,CAAA,SAAA,CAAAW,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,IAAEX,EAAK,YAAY,KAAK,IAAI,GAAK,MAAA,CAAO,CAAA,CAAA,EAC1E,EAEDE,GACCO,EAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,uBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,iCAAkC,SAAMT,CAAA,CAAA,CAAA,CACvD,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGC,CAACD,GACCQ,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAU,aAAA,EACrDF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAA,EAAA,IAACE,EAAA,CACC,MAAOxB,EACP,SAAWyB,GAAMxB,EAAYwB,EAAE,OAAO,KAAK,EAC3C,YAAY,gBAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAA,EAAA,IAACE,EAAA,CACC,KAAK,WACL,MAAOrB,EACP,SAAWsB,GAAMrB,EAAYqB,EAAE,OAAO,KAAK,EAC3C,YAAY,gBAAA,CAAA,CACd,EACF,EACAH,EAAA,IAACC,EAAA,CACC,QAASR,EACT,QAASR,EACT,SAAU,CAACP,GAAY,CAACG,EACzB,SAAA,YAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAIDS,GACCQ,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAW,cAAA,EACtDA,EAAA,IAACC,EAAA,CACC,QAASN,EACT,QAAQ,UACT,SAAA,aAAA,CAAA,CAED,EACF,EAIDZ,GACCe,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAW,cAAA,EACtDA,EAAAA,IAAC,OAAI,UAAU,8CACb,eAAC,MAAI,CAAA,UAAU,UAAW,SAAAjB,CAAW,CAAA,CACvC,CAAA,CAAA,EACF,EAIFe,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAAwB,2BAAA,EAC5FF,EAAAA,KAAC,IAAE,CAAA,UAAU,2CACX,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,eAAO,KAAG,EAAA,EACpCA,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,YAAA,CAC5B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ"}