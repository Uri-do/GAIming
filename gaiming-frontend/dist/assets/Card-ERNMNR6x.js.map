{"version":3,"file":"Card-ERNMNR6x.js","sources":["../../src/components/ui/Card.tsx"],"sourcesContent":["import React from 'react'\nimport { cn } from '@/lib/utils'\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'gaming' | 'glass' | 'elevated' | 'bordered'\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  hover?: boolean\n  glow?: boolean\n}\n\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'gaming'\n}\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', hover = false, glow = false, ...props }, ref) => {\n    const baseClasses = cn(\n      'rounded-lg transition-all duration-200',\n      hover && 'hover:scale-[1.02] cursor-pointer',\n      glow && 'shadow-lg hover:shadow-xl'\n    )\n\n    const variants = {\n      default: cn(\n        'bg-white border border-gray-200 shadow-sm'\n      ),\n      gaming: cn(\n        'bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900',\n        'border border-primary-500/20 shadow-lg shadow-primary-500/10',\n        'relative overflow-hidden',\n        'before:absolute before:inset-0 before:bg-gradient-to-br before:from-primary-500/5 before:to-transparent'\n      ),\n      glass: cn(\n        'backdrop-blur-md bg-white/10',\n        'border border-white/20',\n        'shadow-xl'\n      ),\n      elevated: cn(\n        'bg-white shadow-xl shadow-gray-900/10',\n        'border border-gray-100'\n      ),\n      bordered: cn(\n        'bg-white border-2 border-primary-200'\n      ),\n    }\n\n    const paddings = {\n      none: '',\n      sm: 'p-4',\n      md: 'p-6',\n      lg: 'p-8',\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          baseClasses,\n          variants[variant],\n          paddings[padding],\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, variant = 'default', ...props }, ref) => {\n    const variants = {\n      default: 'flex flex-col space-y-1.5 pb-4',\n      gaming: cn(\n        'flex flex-col space-y-1.5 pb-4 relative',\n        'after:absolute after:bottom-0 after:left-0 after:right-0 after:h-px',\n        'after:bg-gradient-to-r after:from-transparent after:via-primary-500 after:to-transparent'\n      ),\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(variants[variant], className)}\n        {...props}\n      />\n    )\n  }\n)\n\nconst CardTitle = React.forwardRef<HTMLHeadingElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn(\n        'text-xl font-semibold leading-none tracking-tight text-gray-900 dark:text-white',\n        className\n      )}\n      {...props}\n    />\n  )\n)\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <p\n      ref={ref}\n      className={cn('text-sm text-gray-600 dark:text-gray-400', className)}\n      {...props}\n    />\n  )\n)\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('', className)} {...props} />\n  )\n)\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('flex items-center pt-4', className)}\n      {...props}\n    />\n  )\n)\n\nCard.displayName = 'Card'\nCardHeader.displayName = 'CardHeader'\nCardTitle.displayName = 'CardTitle'\nCardDescription.displayName = 'CardDescription'\nCardContent.displayName = 'CardContent'\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter }\nexport default Card\n"],"names":["Card","React","className","variant","padding","hover","glow","props","ref","baseClasses","cn","variants","paddings","jsx","CardHeader","CardTitle","CardDescription","CardContent","CardFooter"],"mappings":"sDAkBA,MAAMA,EAAOC,EAAM,WACjB,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAU,UAAW,QAAAC,EAAU,KAAM,MAAAC,EAAQ,GAAO,KAAAC,EAAO,GAAO,GAAGC,CAAA,EAASC,IAAQ,CAClG,MAAMC,EAAcC,EAClB,yCACAL,GAAS,oCACTC,GAAQ,2BACV,EAEMK,EAAW,CACf,QAASD,EACP,2CACF,EACA,OAAQA,EACN,2DACA,+DACA,2BACA,yGACF,EACA,MAAOA,EACL,+BACA,yBACA,WACF,EACA,SAAUA,EACR,wCACA,wBACF,EACA,SAAUA,EACR,sCAAA,CAEJ,EAEME,EAAW,CACf,KAAM,GACN,GAAI,MACJ,GAAI,MACJ,GAAI,KACN,EAGE,OAAAC,EAAA,IAAC,MAAA,CACC,IAAAL,EACA,UAAWE,EACTD,EACAE,EAASR,CAAO,EAChBS,EAASR,CAAO,EAChBF,CACF,EACC,GAAGK,CAAA,CACN,CAAA,CAGN,EAEMO,EAAab,EAAM,WACvB,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAU,UAAW,GAAGI,GAASC,IAAQ,CACrD,MAAMG,EAAW,CACf,QAAS,iCACT,OAAQD,EACN,0CACA,sEACA,0FAAA,CAEJ,EAGE,OAAAG,EAAA,IAAC,MAAA,CACC,IAAAL,EACA,UAAWE,EAAGC,EAASR,CAAO,EAAGD,CAAS,EACzC,GAAGK,CAAA,CACN,CAAA,CAGN,EAEMQ,EAAYd,EAAM,WACtB,CAAC,CAAE,UAAAC,EAAW,GAAGK,GAASC,IACxBK,EAAA,IAAC,KAAA,CACC,IAAAL,EACA,UAAWE,EACT,kFACAR,CACF,EACC,GAAGK,CAAA,CAAA,CAGV,EAEMS,EAAkBf,EAAM,WAC5B,CAAC,CAAE,UAAAC,EAAW,GAAGK,GAASC,IACxBK,EAAA,IAAC,IAAA,CACC,IAAAL,EACA,UAAWE,EAAG,2CAA4CR,CAAS,EAClE,GAAGK,CAAA,CAAA,CAGV,EAEMU,EAAchB,EAAM,WACxB,CAAC,CAAE,UAAAC,EAAW,GAAGK,GAASC,IACxBK,EAAA,IAAC,MAAI,CAAA,IAAAL,EAAU,UAAWE,EAAG,GAAIR,CAAS,EAAI,GAAGK,CAAO,CAAA,CAE5D,EAEMW,EAAajB,EAAM,WACvB,CAAC,CAAE,UAAAC,EAAW,GAAGK,GAASC,IACxBK,EAAA,IAAC,MAAA,CACC,IAAAL,EACA,UAAWE,EAAG,yBAA0BR,CAAS,EAChD,GAAGK,CAAA,CAAA,CAGV,EAEAP,EAAK,YAAc,OACnBc,EAAW,YAAc,aACzBC,EAAU,YAAc,YACxBC,EAAgB,YAAc,kBAC9BC,EAAY,YAAc,cAC1BC,EAAW,YAAc"}