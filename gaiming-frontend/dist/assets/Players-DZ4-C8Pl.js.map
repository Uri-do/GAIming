{"version":3,"file":"Players-DZ4-C8Pl.js","sources":["../../node_modules/lucide-react/dist/esm/icons/alert-circle.js","../../node_modules/lucide-react/dist/esm/icons/user-check.js","../../src/components/export/ExportProgressDialog.tsx","../../src/hooks/useExport.ts","../../src/pages/Players.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.303.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { AlertCircle as default };\n//# sourceMappingURL=alert-circle.js.map\n","/**\n * @license lucide-react v0.303.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserCheck = createLucideIcon(\"UserCheck\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"polyline\", { points: \"16 11 18 13 22 9\", key: \"1pwet4\" }]\n]);\n\nexport { UserCheck as default };\n//# sourceMappingURL=user-check.js.map\n","import React, { useEffect, useState } from 'react';\nimport { X, Download, AlertCircle, CheckCircle, Clock, FileText } from 'lucide-react';\nimport { ExportProgress } from '../../services/exportService';\nimport Button from '@/components/ui/Button';\nimport { Card } from '@/components/ui/Card';\n\ninterface ExportProgressDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  progress: ExportProgress | null;\n  onCancel?: () => void;\n}\n\nconst ExportProgressDialog: React.FC<ExportProgressDialogProps> = ({\n  isOpen,\n  onClose,\n  progress,\n  onCancel,\n}) => {\n  const [timeElapsed, setTimeElapsed] = useState(0);\n\n  useEffect(() => {\n    if (!isOpen || !progress || progress.stage === 'completed' || progress.stage === 'error') {\n      return;\n    }\n\n    const interval = setInterval(() => {\n      setTimeElapsed(prev => prev + 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isOpen, progress]);\n\n  useEffect(() => {\n    if (isOpen && progress?.stage === 'preparing') {\n      setTimeElapsed(0);\n    }\n  }, [isOpen, progress?.stage]);\n\n  if (!isOpen || !progress) return null;\n\n  const getStageIcon = () => {\n    switch (progress.stage) {\n      case 'preparing':\n      case 'processing':\n      case 'generating':\n        return <Clock className=\"h-5 w-5 text-blue-500 animate-spin\" />;\n      case 'downloading':\n        return <Download className=\"h-5 w-5 text-blue-500 animate-bounce\" />;\n      case 'completed':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'error':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n      default:\n        return <FileText className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getStageColor = () => {\n    switch (progress.stage) {\n      case 'completed':\n        return 'bg-green-500';\n      case 'error':\n        return 'bg-red-500';\n      default:\n        return 'bg-blue-500';\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatETA = (ms?: number) => {\n    if (!ms) return 'Calculating...';\n    const seconds = Math.round(ms / 1000);\n    if (seconds < 60) return `${seconds}s remaining`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s remaining`;\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-3\">\n              {getStageIcon()}\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Exporting Data\n              </h3>\n            </div>\n            {progress.stage !== 'completed' && progress.stage !== 'error' && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onClose}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            )}\n          </div>\n\n          {/* Progress Bar */}\n          <div className=\"mb-4\">\n            <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-2\">\n              <span>Progress</span>\n              <span>{progress.progress}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n              <div\n                className={`h-2 rounded-full transition-all duration-300 ${getStageColor()}`}\n                style={{ width: `${progress.progress}%` }}\n              />\n            </div>\n          </div>\n\n          {/* Status Message */}\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-700 dark:text-gray-300 mb-2\">\n              {progress.message}\n            </p>\n            \n            {progress.stage === 'processing' && (\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span>Records processed:</span>\n                  <span>{progress.processedRecords.toLocaleString()} / {progress.totalRecords.toLocaleString()}</span>\n                </div>\n                {progress.estimatedTimeRemaining && (\n                  <div className=\"flex justify-between\">\n                    <span>Estimated time remaining:</span>\n                    <span>{formatETA(progress.estimatedTimeRemaining)}</span>\n                  </div>\n                )}\n                <div className=\"flex justify-between\">\n                  <span>Time elapsed:</span>\n                  <span>{formatTime(timeElapsed)}</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end space-x-3\">\n            {progress.stage === 'completed' && (\n              <Button variant=\"primary\" onClick={onClose}>\n                Done\n              </Button>\n            )}\n            \n            {progress.stage === 'error' && (\n              <Button variant=\"outline\" onClick={onClose}>\n                Close\n              </Button>\n            )}\n            \n            {(progress.stage === 'preparing' || progress.stage === 'processing' || progress.stage === 'generating') && onCancel && (\n              <>\n                <Button variant=\"outline\" onClick={onCancel}>\n                  Cancel\n                </Button>\n                <Button variant=\"ghost\" onClick={onClose}>\n                  Hide\n                </Button>\n              </>\n            )}\n            \n            {progress.stage === 'downloading' && (\n              <Button variant=\"ghost\" onClick={onClose}>\n                Hide\n              </Button>\n            )}\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default ExportProgressDialog;\n","import { useState, useCallback } from 'react';\nimport { exportService, ExportProgress, ExportFormat } from '../services/exportService';\n\ninterface UseExportOptions {\n  onSuccess?: (jobId: string) => void;\n  onError?: (error: Error) => void;\n  onProgress?: (progress: ExportProgress) => void;\n}\n\ninterface UseExportReturn {\n  isExporting: boolean;\n  progress: ExportProgress | null;\n  error: string | null;\n  exportData: (\n    data: any[],\n    format: ExportFormat,\n    filename?: string,\n    options?: any\n  ) => Promise<void>;\n  exportPlayers: (\n    players: any[],\n    format: ExportFormat,\n    includeSensitiveData?: boolean\n  ) => Promise<void>;\n  exportAnalytics: (\n    analytics: any,\n    format: ExportFormat\n  ) => Promise<void>;\n  exportModels: (\n    models: any[],\n    format: ExportFormat\n  ) => Promise<void>;\n  cancelExport: () => void;\n  clearError: () => void;\n}\n\nexport const useExport = (options: UseExportOptions = {}): UseExportReturn => {\n  const [isExporting, setIsExporting] = useState(false);\n  const [progress, setProgress] = useState<ExportProgress | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [currentJobId, setCurrentJobId] = useState<string | null>(null);\n\n  const handleProgress = useCallback((progressData: ExportProgress) => {\n    setProgress(progressData);\n    options.onProgress?.(progressData);\n    \n    if (progressData.stage === 'completed') {\n      setIsExporting(false);\n      options.onSuccess?.(currentJobId || '');\n    } else if (progressData.stage === 'error') {\n      setIsExporting(false);\n      setError(progressData.message);\n      options.onError?.(new Error(progressData.message));\n    }\n  }, [options, currentJobId]);\n\n  const exportData = useCallback(async (\n    data: any[],\n    format: ExportFormat,\n    filename?: string,\n    exportOptions?: any\n  ) => {\n    try {\n      setIsExporting(true);\n      setError(null);\n      setProgress(null);\n\n      const options = {\n        filename,\n        includeTimestamp: true,\n        onProgress: handleProgress,\n        chunkSize: 1000,\n        ...exportOptions,\n      };\n\n      let jobId: string;\n      \n      switch (format) {\n        case 'csv':\n          jobId = await exportService.exportToCSV(data, options);\n          break;\n        case 'excel':\n          jobId = await exportService.exportToExcel(data, options);\n          break;\n        case 'pdf':\n          jobId = await exportService.exportToPDF(data, options);\n          break;\n        case 'json':\n          jobId = await exportService.exportToJSON(data, options);\n          break;\n        default:\n          throw new Error(`Unsupported export format: ${format}`);\n      }\n      \n      setCurrentJobId(jobId);\n    } catch (err) {\n      setIsExporting(false);\n      const errorMessage = err instanceof Error ? err.message : 'Export failed';\n      setError(errorMessage);\n      options.onError?.(err instanceof Error ? err : new Error(errorMessage));\n    }\n  }, [handleProgress, options]);\n\n  const exportPlayers = useCallback(async (\n    players: any[],\n    format: ExportFormat,\n    includeSensitiveData: boolean = false\n  ) => {\n    try {\n      setIsExporting(true);\n      setError(null);\n      setProgress(null);\n\n      const options = {\n        filename: 'players-export',\n        includeTimestamp: true,\n        onProgress: handleProgress,\n        chunkSize: 500, // Smaller chunks for player data\n        customHeaders: { title: 'GAIming Players Report' }\n      };\n\n      const jobId = await exportService.exportPlayerData(\n        players,\n        format,\n        options,\n        includeSensitiveData\n      );\n      \n      setCurrentJobId(jobId);\n    } catch (err) {\n      setIsExporting(false);\n      const errorMessage = err instanceof Error ? err.message : 'Player export failed';\n      setError(errorMessage);\n      options.onError?.(err instanceof Error ? err : new Error(errorMessage));\n    }\n  }, [handleProgress, options]);\n\n  const exportAnalytics = useCallback(async (\n    analytics: any,\n    format: ExportFormat\n  ) => {\n    try {\n      setIsExporting(true);\n      setError(null);\n      setProgress(null);\n\n      const options = {\n        filename: 'analytics-report',\n        includeTimestamp: true,\n        onProgress: handleProgress,\n        customHeaders: { title: 'GAIming Analytics Report' }\n      };\n\n      const jobId = await exportService.exportAnalyticsReport(\n        analytics,\n        format,\n        options\n      );\n      \n      setCurrentJobId(jobId);\n    } catch (err) {\n      setIsExporting(false);\n      const errorMessage = err instanceof Error ? err.message : 'Analytics export failed';\n      setError(errorMessage);\n      options.onError?.(err instanceof Error ? err : new Error(errorMessage));\n    }\n  }, [handleProgress, options]);\n\n  const exportModels = useCallback(async (\n    models: any[],\n    format: ExportFormat\n  ) => {\n    try {\n      setIsExporting(true);\n      setError(null);\n      setProgress(null);\n\n      const options = {\n        filename: 'ml-models-export',\n        includeTimestamp: true,\n        onProgress: handleProgress,\n        chunkSize: 100, // Smaller chunks for model data\n        customHeaders: { title: 'GAIming ML Models Report' }\n      };\n\n      const jobId = await exportService.exportModelsData(\n        models,\n        format,\n        options\n      );\n      \n      setCurrentJobId(jobId);\n    } catch (err) {\n      setIsExporting(false);\n      const errorMessage = err instanceof Error ? err.message : 'Models export failed';\n      setError(errorMessage);\n      options.onError?.(err instanceof Error ? err : new Error(errorMessage));\n    }\n  }, [handleProgress, options]);\n\n  const cancelExport = useCallback(() => {\n    if (currentJobId) {\n      exportService.cancelExport(currentJobId);\n      setIsExporting(false);\n      setProgress(null);\n      setCurrentJobId(null);\n    }\n  }, [currentJobId]);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    isExporting,\n    progress,\n    error,\n    exportData,\n    exportPlayers,\n    exportAnalytics,\n    exportModels,\n    cancelExport,\n    clearError,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Search,\n  Download,\n  RefreshCw,\n  Users,\n  TrendingUp,\n  AlertTriangle,\n  Eye,\n  UserCheck,\n  Shield,\n  Star,\n  DollarSign,\n} from 'lucide-react';\nimport { playerAnalyticsService, type PlayerAnalytics, type PlayerAnalyticsRequest, type PlayersOverview } from '../services/playerAnalyticsService';\n\nimport BarChart from '../components/charts/BarChart';\nimport PieChart from '../components/charts/PieChart';\nimport { Card } from '@/components/ui/Card';\nimport Button from '@/components/ui/Button';\nimport Badge from '@/components/ui/Badge';\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\nimport AuthGuard, { usePermissions } from '../components/auth/AuthGuard';\nimport ExportProgressDialog from '../components/export/ExportProgressDialog';\nimport { useExport } from '../hooks/useExport';\n\nconst PlayersContent: React.FC = () => {\n  const navigate = useNavigate();\n  const { canExportPlayers, user } = usePermissions();\n  const [players, setPlayers] = useState<PlayerAnalytics[]>([]);\n  const [overview, setOverview] = useState<PlayersOverview | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedPlayer] = useState<PlayerAnalytics | null>(null);\n  const [showExportProgress, setShowExportProgress] = useState(false);\n\n  // Export hook with progress tracking\n  const {\n    isExporting,\n    progress: exportProgress,\n    exportPlayers: exportPlayersData,\n    cancelExport,\n    clearError: clearExportError,\n  } = useExport({\n    onSuccess: () => {\n      setShowExportProgress(false);\n    },\n    onError: (err) => {\n      setError(`Export failed: ${err.message}`);\n      setShowExportProgress(false);\n    },\n  });\n\n  // Suppress unused variable warnings for future use\n  console.log('Selected player:', selectedPlayer);\n\n  // Filters and pagination\n  const [filters, setFilters] = useState<PlayerAnalyticsRequest>({\n    page: 1,\n    pageSize: 20,\n    search: '',\n    sortBy: 'registrationDate',\n    sortDirection: 'desc',\n  });\n\n  const [pagination, setPagination] = useState({\n    totalCount: 0,\n    totalPages: 0,\n    hasNextPage: false,\n    hasPreviousPage: false,\n  });\n\n  useEffect(() => {\n    loadData();\n  }, [filters]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [playersResponse, overviewData] = await Promise.all([\n        playerAnalyticsService.getPlayers(filters),\n        playerAnalyticsService.getPlayersOverview(30, 100),\n      ]);\n\n      setPlayers(playersResponse.items);\n      setPagination({\n        totalCount: playersResponse.totalCount,\n        totalPages: playersResponse.totalPages,\n        hasNextPage: playersResponse.hasNextPage,\n        hasPreviousPage: playersResponse.hasPreviousPage,\n      });\n      setOverview(overviewData);\n    } catch (err) {\n      setError('Failed to load player data');\n      console.error('Error loading players:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (searchTerm: string) => {\n    setFilters(prev => ({ ...prev, search: searchTerm, page: 1 }));\n  };\n\n  const handleFilterChange = (key: keyof PlayerAnalyticsRequest, value: any) => {\n    setFilters(prev => ({ ...prev, [key]: value, page: 1 }));\n  };\n\n  const handlePageChange = (page: number) => {\n    setFilters(prev => ({ ...prev, page }));\n  };\n\n  const handlePlayerClick = (player: PlayerAnalytics) => {\n    navigate(`/players/${player.playerId}`);\n  };\n\n  const handleViewPlayerDetails = (player: PlayerAnalytics, event?: React.MouseEvent) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    navigate(`/players/${player.playerId}`);\n  };\n\n  const handleExport = async (format: 'csv' | 'excel' | 'pdf' = 'csv') => {\n    if (!canExportPlayers) {\n      setError('You do not have permission to export data');\n      return;\n    }\n\n    if (isExporting) {\n      return; // Prevent multiple exports\n    }\n\n    try {\n      clearExportError();\n      setShowExportProgress(true);\n\n      await exportPlayersData(\n        players,\n        format,\n        user?.role === 'Admin' // Include sensitive data only for admins\n      );\n    } catch (err) {\n      setError('Failed to start export');\n      console.error('Export error:', err);\n      setShowExportProgress(false);\n    }\n  };\n\n  const getVipLevelColor = (level: number) => {\n    if (level >= 4) return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n    if (level >= 2) return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n    return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n  };\n\n  const getRiskLevelColor = (level: number) => {\n    if (level >= 4) return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n    if (level >= 3) return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\n    if (level >= 2) return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n    return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n\n\n  if (loading && !players.length) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Players Management - GAIming</title>\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Players Management\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Manage player data and analyze behavior patterns\n            </p>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => loadData()}\n              disabled={loading}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n\n            {canExportPlayers && (\n              <div className=\"relative group\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export\n                </Button>\n                <div className=\"absolute right-0 top-full mt-1 w-32 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-10\">\n                  <button\n                    onClick={() => handleExport('csv')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-t-lg\"\n                  >\n                    Export CSV\n                  </button>\n                  <button\n                    onClick={() => handleExport('excel')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    Export Excel\n                  </button>\n                  <button\n                    onClick={() => handleExport('pdf')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-b-lg\"\n                  >\n                    Export PDF\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <AlertTriangle className=\"h-5 w-5 text-red-500 mr-2\" />\n              <span className=\"text-red-700 dark:text-red-300\">{error}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Overview Cards */}\n        {overview && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Total Players\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {overview.totalPlayers.toLocaleString()}\n                  </p>\n                </div>\n                <Users className=\"h-8 w-8 text-blue-500\" />\n              </div>\n            </Card>\n\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Active Players\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {overview.activePlayers.toLocaleString()}\n                  </p>\n                </div>\n                <UserCheck className=\"h-8 w-8 text-green-500\" />\n              </div>\n            </Card>\n\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    New Players\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {overview.newPlayers.toLocaleString()}\n                  </p>\n                </div>\n                <TrendingUp className=\"h-8 w-8 text-emerald-500\" />\n              </div>\n            </Card>\n\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Total Revenue\n                  </p>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {formatCurrency(overview.totalRevenue)}\n                  </p>\n                </div>\n                <DollarSign className=\"h-8 w-8 text-yellow-500\" />\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Charts Section */}\n        {overview && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Player Segments\n              </h3>\n              <PieChart\n                data={Object.entries(overview.playerSegments).map(([name, value]) => ({\n                  name,\n                  value,\n                }))}\n                height={250}\n                formatTooltip={(value, name) => [`${value} players`, name]}\n              />\n            </Card>\n\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                VIP Level Distribution\n              </h3>\n              <BarChart\n                data={Object.entries(overview.vipDistribution).map(([name, value]) => ({\n                  name: `VIP ${name}`,\n                  players: value,\n                }))}\n                bars={[\n                  {\n                    dataKey: 'players',\n                    fill: '#3B82F6',\n                    name: 'Players',\n                  },\n                ]}\n                height={250}\n                formatTooltip={(value, name) => [`${value} players`, name]}\n              />\n            </Card>\n          </div>\n        )}\n\n        {/* Filters and Search */}\n        <Card className=\"p-6\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search players...\"\n                  value={filters.search || ''}\n                  onChange={(e) => handleSearch(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <select\n                value={filters.vipLevel || ''}\n                onChange={(e) => handleFilterChange('vipLevel', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">All VIP Levels</option>\n                <option value=\"1\">VIP 1</option>\n                <option value=\"2\">VIP 2</option>\n                <option value=\"3\">VIP 3</option>\n                <option value=\"4\">VIP 4</option>\n                <option value=\"5\">VIP 5</option>\n              </select>\n\n              <select\n                value={filters.segment || ''}\n                onChange={(e) => handleFilterChange('segment', e.target.value || undefined)}\n                className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">All Segments</option>\n                <option value=\"High Value\">High Value</option>\n                <option value=\"Regular\">Regular</option>\n                <option value=\"Casual\">Casual</option>\n              </select>\n\n              <select\n                value={filters.isActive?.toString() || ''}\n                onChange={(e) => handleFilterChange('isActive', e.target.value === '' ? undefined : e.target.value === 'true')}\n                className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">All Status</option>\n                <option value=\"true\">Active</option>\n                <option value=\"false\">Inactive</option>\n              </select>\n            </div>\n          </div>\n        </Card>\n\n        {/* Players Table */}\n        <Card className=\"overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              Players ({pagination.totalCount.toLocaleString()})\n            </h3>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Player\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Segment\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    VIP Level\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Risk Level\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Revenue\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Sessions\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Last Login\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n                {players.map((player) => (\n                  <tr\n                    key={player.playerId}\n                    className=\"hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer\"\n                    onClick={() => handlePlayerClick(player)}\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10\">\n                          <div className=\"h-10 w-10 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center\">\n                            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                              {player.username.charAt(0).toUpperCase()}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {player.username}\n                          </div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {player.email}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Badge variant=\"secondary\">\n                        {player.playerSegment}\n                      </Badge>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Badge className={getVipLevelColor(player.vipLevel)}>\n                        <Star className=\"h-3 w-3 mr-1\" />\n                        VIP {player.vipLevel}\n                      </Badge>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Badge className={getRiskLevelColor(player.riskLevel)}>\n                        <Shield className=\"h-3 w-3 mr-1\" />\n                        Risk {player.riskLevel}\n                      </Badge>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                      {formatCurrency(player.totalRevenue)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                      {player.totalSessions.toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {player.lastLoginDate ? formatDate(player.lastLoginDate) : 'Never'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Badge variant={player.isActive ? 'success' : 'error'}>\n                        {player.isActive ? 'Active' : 'Inactive'}\n                      </Badge>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={(e) => handleViewPlayerDetails(player, e)}\n                        title=\"View Player Details\"\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {/* Pagination */}\n          {pagination.totalPages > 1 && (\n            <div className=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  Showing {((filters.page || 1) - 1) * (filters.pageSize || 20) + 1} to{' '}\n                  {Math.min((filters.page || 1) * (filters.pageSize || 20), pagination.totalCount)} of{' '}\n                  {pagination.totalCount} results\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePageChange((filters.page || 1) - 1)}\n                    disabled={!pagination.hasPreviousPage}\n                  >\n                    Previous\n                  </Button>\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    Page {filters.page || 1} of {pagination.totalPages}\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePageChange((filters.page || 1) + 1)}\n                    disabled={!pagination.hasNextPage}\n                  >\n                    Next\n                  </Button>\n                </div>\n              </div>\n            </div>\n          )}\n        </Card>\n\n        {/* Export Progress Dialog */}\n        <ExportProgressDialog\n          isOpen={showExportProgress}\n          onClose={() => setShowExportProgress(false)}\n          progress={exportProgress}\n          onCancel={cancelExport}\n        />\n      </div>\n    </>\n  );\n};\n\nconst Players: React.FC = () => (\n  <AuthGuard requiredPermissions={['players.view']}>\n    <PlayersContent />\n  </AuthGuard>\n);\n\nexport default Players;\n"],"names":["AlertCircle","createLucideIcon","UserCheck","ExportProgressDialog","isOpen","onClose","progress","onCancel","timeElapsed","setTimeElapsed","useState","useEffect","interval","prev","getStageIcon","jsx","Clock","Download","CheckCircle","FileText","getStageColor","formatTime","seconds","mins","secs","formatETA","ms","minutes","remainingSeconds","Card","jsxs","Button","X","Fragment","useExport","options","isExporting","setIsExporting","setProgress","error","setError","currentJobId","setCurrentJobId","handleProgress","useCallback","progressData","_a","_b","_c","exportData","data","format","filename","exportOptions","jobId","exportService","err","errorMessage","exportPlayers","players","includeSensitiveData","exportAnalytics","analytics","exportModels","models","cancelExport","clearError","PlayersContent","navigate","useNavigate","canExportPlayers","user","usePermissions","setPlayers","overview","setOverview","loading","setLoading","selectedPlayer","showExportProgress","setShowExportProgress","exportProgress","exportPlayersData","clearExportError","filters","setFilters","pagination","setPagination","loadData","playersResponse","overviewData","playerAnalyticsService","handleSearch","searchTerm","handleFilterChange","key","value","handlePageChange","page","handlePlayerClick","player","handleViewPlayerDetails","event","handleExport","getVipLevelColor","level","getRiskLevelColor","formatCurrency","amount","formatDate","dateString","LoadingSpinner","Helmet","RefreshCw","AlertTriangle","Users","TrendingUp","DollarSign","PieChart","name","BarChart","Search","e","Badge","Star","Shield","Eye","Players","AuthGuard"],"mappings":"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","x_google_ignoreList":[0,1]}