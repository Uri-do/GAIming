{"version":3,"file":"Button-r1mGnSvO.js","sources":["../../src/components/ui/Button.tsx"],"sourcesContent":["import React from 'react'\nimport { cn } from '@/lib/utils'\nimport LoadingSpinner from './LoadingSpinner'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'primary' | 'gaming' | 'ghost' | 'outline' | 'destructive' | 'glow'\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  loading?: boolean\n  icon?: React.ReactNode\n  iconPosition?: 'left' | 'right'\n  fullWidth?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ \n    className, \n    variant = 'default', \n    size = 'md', \n    loading = false,\n    icon,\n    iconPosition = 'left',\n    fullWidth = false,\n    children, \n    disabled,\n    ...props \n  }, ref) => {\n    const baseClasses = cn(\n      'inline-flex items-center justify-center rounded-lg font-medium transition-all duration-200',\n      'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2',\n      'disabled:pointer-events-none disabled:opacity-50',\n      'active:scale-95 transform',\n      fullWidth && 'w-full'\n    )\n\n    const variants = {\n      default: cn(\n        'bg-gray-100 text-gray-900 shadow-sm',\n        'hover:bg-gray-200 hover:shadow-md',\n        'focus-visible:ring-gray-500'\n      ),\n      primary: cn(\n        'bg-primary-600 text-white shadow-sm',\n        'hover:bg-primary-700 hover:shadow-md',\n        'focus-visible:ring-primary-500'\n      ),\n      gaming: cn(\n        'bg-gradient-to-r from-primary-600 via-purple-600 to-pink-600',\n        'text-white shadow-lg shadow-primary-500/25',\n        'hover:shadow-xl hover:shadow-primary-500/40 hover:scale-105',\n        'focus-visible:ring-primary-500',\n        'relative overflow-hidden',\n        'before:absolute before:inset-0 before:bg-gradient-to-r before:from-transparent before:via-white/20 before:to-transparent',\n        'before:translate-x-[-100%] hover:before:translate-x-[100%] before:transition-transform before:duration-700'\n      ),\n      ghost: cn(\n        'text-gray-700',\n        'hover:bg-gray-100',\n        'focus-visible:ring-gray-500'\n      ),\n      outline: cn(\n        'border border-gray-300 bg-transparent',\n        'text-gray-700',\n        'hover:bg-gray-50',\n        'focus-visible:ring-gray-500'\n      ),\n      destructive: cn(\n        'bg-error-600 text-white shadow-sm',\n        'hover:bg-error-700 hover:shadow-md',\n        'focus-visible:ring-error-500'\n      ),\n      glow: cn(\n        'bg-primary-600 text-white shadow-lg',\n        'hover:shadow-2xl hover:shadow-primary-500/50',\n        'focus-visible:ring-primary-500',\n        'animate-pulse-slow'\n      ),\n    }\n\n    const sizes = {\n      sm: 'h-8 px-3 text-sm gap-1.5',\n      md: 'h-10 px-4 text-sm gap-2',\n      lg: 'h-12 px-6 text-base gap-2.5',\n      xl: 'h-14 px-8 text-lg gap-3',\n    }\n\n    const iconSizes = {\n      sm: 'w-3 h-3',\n      md: 'w-4 h-4',\n      lg: 'w-5 h-5',\n      xl: 'w-6 h-6',\n    }\n\n    const renderContent = () => {\n      if (loading) {\n        return (\n          <>\n            <LoadingSpinner \n              size={size === 'sm' ? 'sm' : 'md'} \n              color=\"white\" \n              className=\"mr-2\" \n            />\n            {children}\n          </>\n        )\n      }\n\n      if (icon && iconPosition === 'left') {\n        return (\n          <>\n            <span className={iconSizes[size]}>{icon}</span>\n            {children}\n          </>\n        )\n      }\n\n      if (icon && iconPosition === 'right') {\n        return (\n          <>\n            {children}\n            <span className={iconSizes[size]}>{icon}</span>\n          </>\n        )\n      }\n\n      return children\n    }\n\n    return (\n      <button\n        className={cn(\n          baseClasses,\n          variants[variant],\n          sizes[size],\n          className\n        )}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {renderContent()}\n      </button>\n    )\n  }\n)\n\nButton.displayName = 'Button'\n\nexport { Button }\nexport default Button\n"],"names":["Button","React","className","variant","size","loading","icon","iconPosition","fullWidth","children","disabled","props","ref","baseClasses","cn","variants","sizes","iconSizes","renderContent","jsxs","Fragment","jsx","LoadingSpinner"],"mappings":"6DAaA,MAAMA,EAASC,EAAM,WACnB,CAAC,CACC,UAAAC,EACA,QAAAC,EAAU,UACV,KAAAC,EAAO,KACP,QAAAC,EAAU,GACV,KAAAC,EACA,aAAAC,EAAe,OACf,UAAAC,EAAY,GACZ,SAAAC,EACA,SAAAC,EACA,GAAGC,GACFC,IAAQ,CACT,MAAMC,EAAcC,EAClB,6FACA,8EACA,mDACA,4BACAN,GAAa,QACf,EAEMO,EAAW,CACf,QAASD,EACP,sCACA,oCACA,6BACF,EACA,QAASA,EACP,sCACA,uCACA,gCACF,EACA,OAAQA,EACN,+DACA,6CACA,8DACA,iCACA,2BACA,2HACA,4GACF,EACA,MAAOA,EACL,gBACA,oBACA,6BACF,EACA,QAASA,EACP,wCACA,gBACA,mBACA,6BACF,EACA,YAAaA,EACX,oCACA,qCACA,8BACF,EACA,KAAMA,EACJ,sCACA,+CACA,iCACA,oBAAA,CAEJ,EAEME,EAAQ,CACZ,GAAI,2BACJ,GAAI,0BACJ,GAAI,8BACJ,GAAI,yBACN,EAEMC,EAAY,CAChB,GAAI,UACJ,GAAI,UACJ,GAAI,UACJ,GAAI,SACN,EAEMC,EAAgB,IAChBb,EAGEc,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,KAAMlB,IAAS,KAAO,KAAO,KAC7B,MAAM,QACN,UAAU,MAAA,CACZ,EACCK,CAAA,EACH,EAIAH,GAAQC,IAAiB,OAGvBY,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,MAAC,OAAK,CAAA,UAAWJ,EAAUb,CAAI,EAAI,SAAKE,EAAA,EACvCG,CAAA,EACH,EAIAH,GAAQC,IAAiB,QAGtBY,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAX,QACA,OAAK,CAAA,UAAWQ,EAAUb,CAAI,EAAI,SAAKE,CAAA,CAAA,CAAA,EAC1C,EAIGG,EAIP,OAAAY,EAAA,IAAC,SAAA,CACC,UAAWP,EACTD,EACAE,EAASZ,CAAO,EAChBa,EAAMZ,CAAI,EACVF,CACF,EACA,IAAAU,EACA,SAAUF,GAAYL,EACrB,GAAGM,EAEH,SAAcO,EAAA,CAAA,CACjB,CAAA,CAGN,EAEAlB,EAAO,YAAc"}