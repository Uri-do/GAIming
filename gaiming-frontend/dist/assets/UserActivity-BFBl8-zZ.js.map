{"version":3,"file":"UserActivity-BFBl8-zZ.js","sources":["../../src/pages/admin/UserActivity.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport {\n  Activity,\n  Search,\n  User,\n  Clock,\n  MapPin,\n  Monitor,\n  Smartphone,\n  AlertTriangle,\n  CheckCircle,\n  XCircle\n} from 'lucide-react'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/Badge'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/Card'\n\n\ninterface UserActivity {\n  id: string\n  userId: string\n  username: string\n  action: string\n  resource: string\n  timestamp: string\n  ipAddress: string\n  userAgent: string\n  success: boolean\n  details?: string\n}\n\nconst activityIcons: Record<string, React.ComponentType<{ className?: string }>> = {\n  login: User,\n  logout: User,\n  create: CheckCircle,\n  update: Activity,\n  delete: XCircle,\n  view: Activity,\n  error: AlertTriangle,\n}\n\nconst getDeviceIcon = (userAgent: string) => {\n  if (userAgent.toLowerCase().includes('mobile')) {\n    return Smartphone\n  }\n  return Monitor\n}\n\nfunction UserActivity() {\n  const [search, setSearch] = useState('')\n  const [userFilter] = useState<string>('')\n  const [actionFilter, setActionFilter] = useState<string>('')\n  const [dateRange, setDateRange] = useState<string>('7')\n\n  // Mock data - replace with actual API call\n  const { data: activities = [], isLoading, error } = useQuery<UserActivity[]>({\n    queryKey: ['user-activity', userFilter, actionFilter, dateRange],\n    queryFn: async () => {\n      // This would be replaced with actual API call\n      return [\n        {\n          id: '1',\n          userId: 'user-1',\n          username: 'admin',\n          action: 'login',\n          resource: 'Authentication',\n          timestamp: new Date().toISOString(),\n          ipAddress: '192.168.1.100',\n          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n          success: true,\n        },\n        {\n          id: '2',\n          userId: 'user-1',\n          username: 'admin',\n          action: 'create',\n          resource: 'User',\n          timestamp: new Date(Date.now() - 3600000).toISOString(),\n          ipAddress: '192.168.1.100',\n          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n          success: true,\n          details: 'Created user: john.doe',\n        },\n        {\n          id: '3',\n          userId: 'user-2',\n          username: 'john.doe',\n          action: 'login',\n          resource: 'Authentication',\n          timestamp: new Date(Date.now() - 7200000).toISOString(),\n          ipAddress: '192.168.1.101',\n          userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)',\n          success: false,\n          details: 'Invalid password',\n        },\n      ]\n    },\n  })\n\n  // Filter activities\n  const filteredActivities = activities.filter(activity => {\n    const matchesSearch = activity.username.toLowerCase().includes(search.toLowerCase()) ||\n                         activity.action.toLowerCase().includes(search.toLowerCase()) ||\n                         activity.resource.toLowerCase().includes(search.toLowerCase())\n    \n    const matchesUser = !userFilter || activity.userId === userFilter\n    const matchesAction = !actionFilter || activity.action === actionFilter\n    \n    return matchesSearch && matchesUser && matchesAction\n  })\n\n  const formatDateTime = (dateString: string) => {\n    return new Date(dateString).toLocaleString()\n  }\n\n  const formatTimeAgo = (dateString: string) => {\n    const now = new Date()\n    const date = new Date(dateString)\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60))\n    \n    if (diffInMinutes < 1) return 'Just now'\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`\n    return `${Math.floor(diffInMinutes / 1440)}d ago`\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <Activity className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Error loading activity</h3>\n          <p className=\"text-gray-600\">Please try again later</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">User Activity</h1>\n          <p className=\"text-gray-600\">Monitor user actions and system events</p>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Activities</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{activities.length}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Successful Actions</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {activities.filter(a => a.success).length}\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Failed Actions</CardTitle>\n            <XCircle className=\"h-4 w-4 text-red-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {activities.filter(a => !a.success).length}\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n            <User className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {new Set(activities.map(a => a.userId)).size}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Filters</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                <Input\n                  placeholder=\"Search activities...\"\n                  value={search}\n                  onChange={(e) => setSearch(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            <div className=\"flex gap-2\">\n              <select\n                value={dateRange}\n                onChange={(e) => setDateRange(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-md text-sm w-32\"\n              >\n                <option value=\"1\">Last 24h</option>\n                <option value=\"7\">Last 7 days</option>\n                <option value=\"30\">Last 30 days</option>\n                <option value=\"90\">Last 90 days</option>\n              </select>\n              <select\n                value={actionFilter}\n                onChange={(e) => setActionFilter(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-md text-sm w-32\"\n              >\n                <option value=\"\">All Actions</option>\n                <option value=\"login\">Login</option>\n                <option value=\"logout\">Logout</option>\n                <option value=\"create\">Create</option>\n                <option value=\"update\">Update</option>\n                <option value=\"delete\">Delete</option>\n              </select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Activity Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n          <CardDescription>\n            {filteredActivities.length} activities found\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"flex items-center justify-center h-32\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>User</TableHead>\n                  <TableHead>Action</TableHead>\n                  <TableHead>Resource</TableHead>\n                  <TableHead>Time</TableHead>\n                  <TableHead>Location</TableHead>\n                  <TableHead>Device</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Details</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredActivities.map((activity) => {\n                  const ActionIcon = activityIcons[activity.action] || Activity\n                  const DeviceIcon = getDeviceIcon(activity.userAgent)\n                  \n                  return (\n                    <TableRow key={activity.id}>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"font-medium\">{activity.username}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <ActionIcon className=\"h-4 w-4 text-blue-600\" />\n                          <span className=\"capitalize\">{activity.action}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>{activity.resource}</TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock className=\"h-4 w-4 text-gray-400\" />\n                          <div>\n                            <div className=\"text-sm\">{formatTimeAgo(activity.timestamp)}</div>\n                            <div className=\"text-xs text-gray-500\">{formatDateTime(activity.timestamp)}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"text-sm\">{activity.ipAddress}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <DeviceIcon className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"text-sm\">\n                            {activity.userAgent.includes('Mobile') ? 'Mobile' : 'Desktop'}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={activity.success ? \"default\" : \"error\"}>\n                          {activity.success ? \"Success\" : \"Failed\"}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"max-w-xs truncate text-sm text-gray-600\">\n                          {activity.details || '-'}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default UserActivity\n"],"names":["activityIcons","User","CheckCircle","Activity","XCircle","AlertTriangle","getDeviceIcon","userAgent","Smartphone","Monitor","UserActivity","search","setSearch","useState","userFilter","actionFilter","setActionFilter","dateRange","setDateRange","activities","isLoading","error","useQuery","filteredActivities","activity","matchesSearch","matchesUser","matchesAction","formatDateTime","dateString","formatTimeAgo","now","date","diffInMinutes","jsxs","jsx","Card","CardHeader","CardTitle","CardContent","a","Search","Input","e","CardDescription","Table","TableHeader","TableRow","TableHead","TableBody","ActionIcon","DeviceIcon","TableCell","Clock","MapPin","Badge"],"mappings":"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"}