{"version":3,"file":"Games-CpAeYqD1.js","sources":["../../node_modules/lucide-react/dist/esm/icons/filter.js","../../src/pages/Games.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.303.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\"polygon\", { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.js.map\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Search, Filter, Plus, Gamepad2, Monitor, Smartphone, Star, TrendingUp, Eye } from 'lucide-react'\nimport { gameService } from '@/services/gameService'\nimport { Game, PaginatedResponse } from '@/types'\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/Card'\nimport Button from '@/components/ui/Button'\nimport Badge from '@/components/ui/Badge'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\n\nconst Games: React.FC = () => {\n  const navigate = useNavigate()\n  const [games, setGames] = useState<Game[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pageSize: 20,\n    totalCount: 0,\n    totalPages: 0\n  })\n\n  const fetchGames = async (page = 1) => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      console.log('Fetching games from API...')\n      const response: PaginatedResponse<Game> = await gameService.getGames({\n        page,\n        pageSize: pagination.pageSize\n      })\n\n      console.log('Games response:', response)\n\n      // Handle nested response structure\n      const data = 'data' in response ? response.data : response\n      const typedData = data as any\n      const items = typedData.items || typedData.data || []\n\n      setGames(items)\n      setPagination({\n        page: typedData.page || 1,\n        pageSize: typedData.pageSize || 20,\n        totalCount: typedData.totalCount || 0,\n        totalPages: typedData.totalPages || 0\n      })\n    } catch (err) {\n      console.error('Error fetching games:', err)\n      setError(err instanceof Error ? err.message : 'Failed to fetch games')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchGames()\n  }, [])\n\n  const handlePageChange = (newPage: number) => {\n    fetchGames(newPage)\n  }\n\n  const handleViewDetails = (gameId: number) => {\n    navigate(`/games/${gameId}`)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500/10 to-purple-500/10 rounded-lg -m-4\" />\n          <div className=\"relative z-10 p-4\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              Games\n            </h1>\n            <p className=\"text-gray-400 mt-2 text-lg\">Manage and analyze your game catalog</p>\n          </div>\n        </div>\n        <Card variant=\"gaming\" className=\"text-center\">\n          <CardContent className=\"p-8\">\n            <LoadingSpinner size=\"xl\" variant=\"gaming\" />\n            <p className=\"text-gray-300 mt-4 text-lg\">Loading games...</p>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500/10 to-purple-500/10 rounded-lg -m-4\" />\n          <div className=\"relative z-10 p-4\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              Games\n            </h1>\n            <p className=\"text-gray-400 mt-2 text-lg\">Manage and analyze your game catalog</p>\n          </div>\n        </div>\n        <Card variant=\"gaming\" className=\"border-error-500/30\">\n          <CardHeader variant=\"gaming\">\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <Gamepad2 className=\"w-5 h-5 text-error-400\" />\n              Error Loading Games\n            </CardTitle>\n            <CardDescription className=\"text-gray-400\">{error}</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Button\n              variant=\"destructive\"\n              onClick={() => fetchGames()}\n              icon={<TrendingUp />}\n            >\n              Retry Loading\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500/10 to-purple-500/10 rounded-lg -m-4\" />\n        <div className=\"relative z-10 p-4\">\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Games\n          </h1>\n          <p className=\"text-gray-400 mt-2 text-lg\">\n            Manage and analyze your game catalog ({pagination.totalCount} games)\n          </p>\n        </div>\n      </div>\n\n      {/* Search and Filters */}\n      <Card variant=\"gaming\" className=\"relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-purple-500/5\" />\n        <CardContent className=\"relative z-10 p-6\">\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1 relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search games...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-3 bg-gray-800/50 border border-primary-500/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-all duration-200\"\n              />\n            </div>\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" icon={<Filter />} className=\"border-primary-500/30 hover:bg-primary-500/10\">\n                Filter\n              </Button>\n              <Button variant=\"gaming\" icon={<Plus />}>\n                Add Game\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Games Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {games && games.length > 0 ? games.map((game) => (\n          <Card key={game.gameId} variant=\"gaming\" hover glow className=\"relative overflow-hidden group cursor-pointer\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-purple-500/5 group-hover:from-primary-500/10 group-hover:to-purple-500/10 transition-all duration-300\" />\n            <CardContent className=\"relative z-10 p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-white mb-2 truncate text-lg group-hover:text-primary-400 transition-colors\">\n                    {game.gameName}\n                  </h3>\n                  <p className=\"text-sm text-gray-400 mb-1\">\n                    <span className=\"text-primary-400\">Provider:</span> {game.providerName || game.provider?.providerName || 'Unknown'}\n                  </p>\n                  <p className=\"text-sm text-gray-400 mb-1\">\n                    <span className=\"text-primary-400\">Type:</span> {game.gameTypeName || game.gameType?.gameTypeName || 'Unknown'}\n                  </p>\n                  {game.rtpPercentage && (\n                    <p className=\"text-sm text-gray-400 mb-3\">\n                      <span className=\"text-primary-400\">RTP:</span> {game.rtpPercentage}%\n                    </p>\n                  )}\n                </div>\n                <Gamepad2 className=\"w-6 h-6 text-primary-400 opacity-50\" />\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <Badge\n                    variant={game.isActive ? 'success' : 'error'}\n                    size=\"sm\"\n                    icon={game.isActive ? <Star className=\"w-3 h-3\" /> : undefined}\n                  >\n                    {game.isActive ? 'Active' : 'Inactive'}\n                  </Badge>\n\n                  <div className=\"flex gap-1\">\n                    {game.isMobile && (\n                      <Badge variant=\"outline\" size=\"sm\" icon={<Smartphone className=\"w-3 h-3\" />}>\n                        Mobile\n                      </Badge>\n                    )}\n                    {game.isDesktop && (\n                      <Badge variant=\"outline\" size=\"sm\" icon={<Monitor className=\"w-3 h-3\" />}>\n                        Desktop\n                      </Badge>\n                    )}\n                  </div>\n                </div>\n\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  fullWidth\n                  className=\"hover:bg-primary-500/20 hover:text-primary-300 transition-all duration-200\"\n                  onClick={() => handleViewDetails(game.gameId)}\n                  icon={<Eye className=\"w-4 h-4\" />}\n                >\n                  View Details\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )) : (\n          <div className=\"col-span-full\">\n            <Card variant=\"gaming\" className=\"text-center\">\n              <CardContent className=\"p-8\">\n                <Gamepad2 className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-white mb-2\">No Games Found</h3>\n                <p className=\"text-gray-400\">No games match your current filters.</p>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <Card variant=\"gaming\" className=\"relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-primary-500/5 to-purple-500/5\" />\n          <CardContent className=\"relative z-10 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <p className=\"text-sm text-gray-300\">\n                  Showing page <span className=\"text-primary-400 font-medium\">{pagination.page}</span> of{' '}\n                  <span className=\"text-primary-400 font-medium\">{pagination.totalPages}</span> ({pagination.totalCount} total games)\n                </p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(pagination.page - 1)}\n                  disabled={pagination.page <= 1}\n                  className=\"border-primary-500/30 hover:bg-primary-500/10\"\n                >\n                  Previous\n                </Button>\n                <Badge variant=\"gaming\" size=\"md\">\n                  {pagination.page}\n                </Badge>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(pagination.page + 1)}\n                  disabled={pagination.page >= pagination.totalPages}\n                  className=\"border-primary-500/30 hover:bg-primary-500/10\"\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default Games\n"],"names":["Filter","createLucideIcon","Games","navigate","useNavigate","games","setGames","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","pagination","setPagination","fetchGames","page","response","gameService","typedData","items","err","useEffect","handlePageChange","newPage","handleViewDetails","gameId","jsxs","jsx","Card","CardContent","LoadingSpinner","CardHeader","CardTitle","Gamepad2","CardDescription","Button","TrendingUp","Search","e","Plus","game","_a","_b","Badge","Star","Smartphone","Monitor","Eye"],"mappings":"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","x_google_ignoreList":[0]}