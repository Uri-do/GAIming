{"version":3,"file":"Analytics-BFCzswh1.js","sources":["../../node_modules/recharts/es6/cartesian/Line.js","../../node_modules/recharts/es6/chart/LineChart.js","../../src/services/analyticsService.ts","../../src/components/charts/LineChart.tsx","../../src/pages/Analytics.tsx"],"sourcesContent":["var _excluded = [\"type\", \"layout\", \"connectNulls\", \"ref\"],\n  _excluded2 = [\"key\"];\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * @fileOverview Line\n */\nimport React, { PureComponent } from 'react';\nimport Animate from 'react-smooth';\nimport isFunction from 'lodash/isFunction';\nimport isNil from 'lodash/isNil';\nimport isEqual from 'lodash/isEqual';\nimport clsx from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { LabelList } from '../component/LabelList';\nimport { ErrorBar } from './ErrorBar';\nimport { uniqueId, interpolateNumber } from '../util/DataUtils';\nimport { findAllByType, filterProps, hasClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getValueByDataKey } from '../util/ChartUtils';\nexport var Line = /*#__PURE__*/function (_PureComponent) {\n  function Line() {\n    var _this;\n    _classCallCheck(this, Line);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Line, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      isAnimationFinished: true,\n      totalLength: 0\n    });\n    _defineProperty(_this, \"generateSimpleStrokeDasharray\", function (totalLength, length) {\n      return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n    });\n    _defineProperty(_this, \"getStrokeDasharray\", function (length, totalLength, lines) {\n      var lineLength = lines.reduce(function (pre, next) {\n        return pre + next;\n      });\n\n      // if lineLength is 0 return the default when no strokeDasharray is provided\n      if (!lineLength) {\n        return _this.generateSimpleStrokeDasharray(totalLength, length);\n      }\n      var count = Math.floor(length / lineLength);\n      var remainLength = length % lineLength;\n      var restLength = totalLength - length;\n      var remainLines = [];\n      for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n        if (sum + lines[i] > remainLength) {\n          remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);\n          break;\n        }\n      }\n      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n      return [].concat(_toConsumableArray(Line.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function (line) {\n        return \"\".concat(line, \"px\");\n      }).join(', ');\n    });\n    _defineProperty(_this, \"id\", uniqueId('recharts-line-'));\n    _defineProperty(_this, \"pathRef\", function (node) {\n      _this.mainCurve = node;\n    });\n    _defineProperty(_this, \"handleAnimationEnd\", function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n      if (_this.props.onAnimationEnd) {\n        _this.props.onAnimationEnd();\n      }\n    });\n    _defineProperty(_this, \"handleAnimationStart\", function () {\n      _this.setState({\n        isAnimationFinished: false\n      });\n      if (_this.props.onAnimationStart) {\n        _this.props.onAnimationStart();\n      }\n    });\n    return _this;\n  }\n  _inherits(Line, _PureComponent);\n  return _createClass(Line, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isAnimationActive) {\n        return;\n      }\n      var totalLength = this.getTotalLength();\n      this.setState({\n        totalLength: totalLength\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.props.isAnimationActive) {\n        return;\n      }\n      var totalLength = this.getTotalLength();\n      if (totalLength !== this.state.totalLength) {\n        this.setState({\n          totalLength: totalLength\n        });\n      }\n    }\n  }, {\n    key: \"getTotalLength\",\n    value: function getTotalLength() {\n      var curveDom = this.mainCurve;\n      try {\n        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;\n      } catch (err) {\n        return 0;\n      }\n    }\n  }, {\n    key: \"renderErrorBar\",\n    value: function renderErrorBar(needClip, clipPathId) {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n      var _this$props = this.props,\n        points = _this$props.points,\n        xAxis = _this$props.xAxis,\n        yAxis = _this$props.yAxis,\n        layout = _this$props.layout,\n        children = _this$props.children;\n      var errorBarItems = findAllByType(children, ErrorBar);\n      if (!errorBarItems) {\n        return null;\n      }\n      var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n        };\n      };\n      var errorBarProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n      };\n      return /*#__PURE__*/React.createElement(Layer, errorBarProps, errorBarItems.map(function (item) {\n        return /*#__PURE__*/React.cloneElement(item, {\n          key: \"bar-\".concat(item.props.dataKey),\n          data: points,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          dataPointFormatter: dataPointFormatter\n        });\n      }));\n    }\n  }, {\n    key: \"renderDots\",\n    value: function renderDots(needClip, clipDot, clipPathId) {\n      var isAnimationActive = this.props.isAnimationActive;\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n      var _this$props2 = this.props,\n        dot = _this$props2.dot,\n        points = _this$props2.points,\n        dataKey = _this$props2.dataKey;\n      var lineProps = filterProps(this.props, false);\n      var customDotProps = filterProps(dot, true);\n      var dots = points.map(function (entry, i) {\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n          key: \"dot-\".concat(i),\n          r: 3\n        }, lineProps), customDotProps), {}, {\n          index: i,\n          cx: entry.x,\n          cy: entry.y,\n          value: entry.value,\n          dataKey: dataKey,\n          payload: entry.payload,\n          points: points\n        });\n        return Line.renderDotItem(dot, dotProps);\n      });\n      var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : null\n      };\n      return /*#__PURE__*/React.createElement(Layer, _extends({\n        className: \"recharts-line-dots\",\n        key: \"dots\"\n      }, dotsProps), dots);\n    }\n  }, {\n    key: \"renderCurveStatically\",\n    value: function renderCurveStatically(points, needClip, clipPathId, props) {\n      var _this$props3 = this.props,\n        type = _this$props3.type,\n        layout = _this$props3.layout,\n        connectNulls = _this$props3.connectNulls,\n        ref = _this$props3.ref,\n        others = _objectWithoutProperties(_this$props3, _excluded);\n      var curveProps = _objectSpread(_objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n        fill: 'none',\n        className: 'recharts-line-curve',\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null,\n        points: points\n      }, props), {}, {\n        type: type,\n        layout: layout,\n        connectNulls: connectNulls\n      });\n      return /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n        pathRef: this.pathRef\n      }));\n    }\n  }, {\n    key: \"renderCurveWithAnimation\",\n    value: function renderCurveWithAnimation(needClip, clipPathId) {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        points = _this$props4.points,\n        strokeDasharray = _this$props4.strokeDasharray,\n        isAnimationActive = _this$props4.isAnimationActive,\n        animationBegin = _this$props4.animationBegin,\n        animationDuration = _this$props4.animationDuration,\n        animationEasing = _this$props4.animationEasing,\n        animationId = _this$props4.animationId,\n        animateNewValues = _this$props4.animateNewValues,\n        width = _this$props4.width,\n        height = _this$props4.height;\n      var _this$state = this.state,\n        prevPoints = _this$state.prevPoints,\n        totalLength = _this$state.totalLength;\n      return /*#__PURE__*/React.createElement(Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: \"line-\".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        if (prevPoints) {\n          var prevPointsDiffFactor = prevPoints.length / points.length;\n          var stepData = points.map(function (entry, index) {\n            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n            if (prevPoints[prevPointIndex]) {\n              var prev = prevPoints[prevPointIndex];\n              var interpolatorX = interpolateNumber(prev.x, entry.x);\n              var interpolatorY = interpolateNumber(prev.y, entry.y);\n              return _objectSpread(_objectSpread({}, entry), {}, {\n                x: interpolatorX(t),\n                y: interpolatorY(t)\n              });\n            }\n\n            // magic number of faking previous x and y location\n            if (animateNewValues) {\n              var _interpolatorX = interpolateNumber(width * 2, entry.x);\n              var _interpolatorY = interpolateNumber(height / 2, entry.y);\n              return _objectSpread(_objectSpread({}, entry), {}, {\n                x: _interpolatorX(t),\n                y: _interpolatorY(t)\n              });\n            }\n            return _objectSpread(_objectSpread({}, entry), {}, {\n              x: entry.x,\n              y: entry.y\n            });\n          });\n          return _this2.renderCurveStatically(stepData, needClip, clipPathId);\n        }\n        var interpolator = interpolateNumber(0, totalLength);\n        var curLength = interpolator(t);\n        var currentStrokeDasharray;\n        if (strokeDasharray) {\n          var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(function (num) {\n            return parseFloat(num);\n          });\n          currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);\n        } else {\n          currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);\n        }\n        return _this2.renderCurveStatically(points, needClip, clipPathId, {\n          strokeDasharray: currentStrokeDasharray\n        });\n      });\n    }\n  }, {\n    key: \"renderCurve\",\n    value: function renderCurve(needClip, clipPathId) {\n      var _this$props5 = this.props,\n        points = _this$props5.points,\n        isAnimationActive = _this$props5.isAnimationActive;\n      var _this$state2 = this.state,\n        prevPoints = _this$state2.prevPoints,\n        totalLength = _this$state2.totalLength;\n      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual(prevPoints, points))) {\n        return this.renderCurveWithAnimation(needClip, clipPathId);\n      }\n      return this.renderCurveStatically(points, needClip, clipPathId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _filterProps;\n      var _this$props6 = this.props,\n        hide = _this$props6.hide,\n        dot = _this$props6.dot,\n        points = _this$props6.points,\n        className = _this$props6.className,\n        xAxis = _this$props6.xAxis,\n        yAxis = _this$props6.yAxis,\n        top = _this$props6.top,\n        left = _this$props6.left,\n        width = _this$props6.width,\n        height = _this$props6.height,\n        isAnimationActive = _this$props6.isAnimationActive,\n        id = _this$props6.id;\n      if (hide || !points || !points.length) {\n        return null;\n      }\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var hasSinglePoint = points.length === 1;\n      var layerClass = clsx('recharts-line', className);\n      var needClipX = xAxis && xAxis.allowDataOverflow;\n      var needClipY = yAxis && yAxis.allowDataOverflow;\n      var needClip = needClipX || needClipY;\n      var clipPathId = isNil(id) ? this.id : id;\n      var _ref2 = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n          r: 3,\n          strokeWidth: 2\n        },\n        _ref2$r = _ref2.r,\n        r = _ref2$r === void 0 ? 3 : _ref2$r,\n        _ref2$strokeWidth = _ref2.strokeWidth,\n        strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;\n      var _ref3 = hasClipDot(dot) ? dot : {},\n        _ref3$clipDot = _ref3.clipDot,\n        clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;\n      var dotSize = r * 2 + strokeWidth;\n      return /*#__PURE__*/React.createElement(Layer, {\n        className: layerClass\n      }, needClipX || needClipY ? /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n        id: \"clipPath-\".concat(clipPathId)\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        x: needClipX ? left : left - width / 2,\n        y: needClipY ? top : top - height / 2,\n        width: needClipX ? width : width * 2,\n        height: needClipY ? height : height * 2\n      })), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n        id: \"clipPath-dots-\".concat(clipPathId)\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        x: left - dotSize / 2,\n        y: top - dotSize / 2,\n        width: width + dotSize,\n        height: height + dotSize\n      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.animationId !== prevState.prevAnimationId) {\n        return {\n          prevAnimationId: nextProps.animationId,\n          curPoints: nextProps.points,\n          prevPoints: prevState.curPoints\n        };\n      }\n      if (nextProps.points !== prevState.curPoints) {\n        return {\n          curPoints: nextProps.points\n        };\n      }\n      return null;\n    }\n  }, {\n    key: \"repeat\",\n    value: function repeat(lines, count) {\n      var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [0]) : lines;\n      var result = [];\n      for (var i = 0; i < count; ++i) {\n        result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));\n      }\n      return result;\n    }\n  }, {\n    key: \"renderDotItem\",\n    value: function renderDotItem(option, props) {\n      var dotItem;\n      if ( /*#__PURE__*/React.isValidElement(option)) {\n        dotItem = /*#__PURE__*/React.cloneElement(option, props);\n      } else if (isFunction(option)) {\n        dotItem = option(props);\n      } else {\n        var key = props.key,\n          dotProps = _objectWithoutProperties(props, _excluded2);\n        var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/React.createElement(Dot, _extends({\n          key: key\n        }, dotProps, {\n          className: className\n        }));\n      }\n      return dotItem;\n    }\n  }]);\n}(PureComponent);\n_defineProperty(Line, \"displayName\", 'Line');\n_defineProperty(Line, \"defaultProps\", {\n  xAxisId: 0,\n  yAxisId: 0,\n  connectNulls: false,\n  activeDot: true,\n  dot: true,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  fill: '#fff',\n  points: [],\n  isAnimationActive: !Global.isSsr,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  hide: false,\n  label: false\n});\n/**\n * Compose the data of each group\n * @param {Object} props The props from the component\n * @param  {Object} xAxis   The configuration of x-axis\n * @param  {Object} yAxis   The configuration of y-axis\n * @param  {String} dataKey The unique key of a group\n * @return {Array}  Composed data\n */\n_defineProperty(Line, \"getComposedData\", function (_ref4) {\n  var props = _ref4.props,\n    xAxis = _ref4.xAxis,\n    yAxis = _ref4.yAxis,\n    xAxisTicks = _ref4.xAxisTicks,\n    yAxisTicks = _ref4.yAxisTicks,\n    dataKey = _ref4.dataKey,\n    bandSize = _ref4.bandSize,\n    displayedData = _ref4.displayedData,\n    offset = _ref4.offset;\n  var layout = props.layout;\n  var points = displayedData.map(function (entry, index) {\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      return {\n        x: getCateCoordinateOfLine({\n          axis: xAxis,\n          ticks: xAxisTicks,\n          bandSize: bandSize,\n          entry: entry,\n          index: index\n        }),\n        y: isNil(value) ? null : yAxis.scale(value),\n        value: value,\n        payload: entry\n      };\n    }\n    return {\n      x: isNil(value) ? null : xAxis.scale(value),\n      y: getCateCoordinateOfLine({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        entry: entry,\n        index: index\n      }),\n      value: value,\n      payload: entry\n    };\n  });\n  return _objectSpread({\n    points: points,\n    layout: layout\n  }, offset);\n});","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import { api } from './api';\nimport type { ApiResponse, RecommendationAnalytics, DiversityMetrics } from '../types';\n\n// Analytics Types\nexport interface ComprehensiveAnalytics {\n  overview: AnalyticsOverview;\n  recommendations: RecommendationAnalytics;\n  games: GameAnalytics;\n  players: PlayerAnalytics;\n  revenue: RevenueAnalytics;\n  performance: PerformanceAnalytics;\n  trends: TrendAnalytics;\n}\n\nexport interface AnalyticsOverview {\n  totalPlayers: number;\n  activePlayers: number;\n  totalGames: number;\n  activeGames: number;\n  totalRecommendations: number;\n  totalRevenue: number;\n  averageCTR: number;\n  averageConversionRate: number;\n  systemHealth: number;\n  lastUpdated: string;\n}\n\nexport interface GameAnalytics {\n  totalGames: number;\n  activeGames: number;\n  newGames: number;\n  topPerformingGames: GamePerformance[];\n  gameTypeDistribution: Record<string, number>;\n  providerDistribution: Record<string, number>;\n  volatilityDistribution: Record<string, number>;\n  averageRTP: number;\n  gameEngagement: GameEngagement[];\n}\n\nexport interface GamePerformance {\n  gameId: number;\n  gameName: string;\n  provider: string;\n  sessions: number;\n  revenue: number;\n  rtp: number;\n  popularity: number;\n  recommendationScore: number;\n}\n\nexport interface GameEngagement {\n  gameId: number;\n  gameName: string;\n  averageSessionDuration: number;\n  returnPlayerRate: number;\n  engagementScore: number;\n}\n\nexport interface PlayerAnalytics {\n  totalPlayers: number;\n  activePlayers: number;\n  newPlayers: number;\n  churnedPlayers: number;\n  playerSegments: Record<string, number>;\n  vipDistribution: Record<string, number>;\n  riskDistribution: Record<string, number>;\n  countryDistribution: Record<string, number>;\n  retentionRates: RetentionRate[];\n  lifetimeValueDistribution: Record<string, number>;\n}\n\nexport interface RetentionRate {\n  period: string;\n  rate: number;\n  cohortSize: number;\n}\n\nexport interface RevenueAnalytics {\n  totalRevenue: number;\n  revenueGrowth: number;\n  revenueByGame: Record<string, number>;\n  revenueByProvider: Record<string, number>;\n  revenueByPlayerSegment: Record<string, number>;\n  revenueByCountry: Record<string, number>;\n  averageRevenuePerPlayer: number;\n  averageRevenuePerSession: number;\n  revenueTrends: RevenueTrend[];\n}\n\nexport interface RevenueTrend {\n  date: string;\n  revenue: number;\n  players: number;\n  sessions: number;\n  averageRevenuePerPlayer: number;\n}\n\nexport interface PerformanceAnalytics {\n  systemMetrics: SystemMetrics;\n  algorithmPerformance: AlgorithmPerformance[];\n  apiPerformance: ApiPerformance;\n  databasePerformance: DatabasePerformance;\n  cachePerformance: CachePerformance;\n}\n\nexport interface SystemMetrics {\n  cpuUsage: number;\n  memoryUsage: number;\n  diskUsage: number;\n  networkLatency: number;\n  uptime: number;\n  errorRate: number;\n}\n\nexport interface AlgorithmPerformance {\n  algorithm: string;\n  accuracy: number;\n  precision: number;\n  recall: number;\n  f1Score: number;\n  auc: number;\n  ndcg: number;\n  coverage: number;\n  diversity: number;\n  responseTime: number;\n}\n\nexport interface ApiPerformance {\n  totalRequests: number;\n  averageResponseTime: number;\n  errorRate: number;\n  throughput: number;\n  endpointMetrics: EndpointMetric[];\n}\n\nexport interface EndpointMetric {\n  endpoint: string;\n  requests: number;\n  averageResponseTime: number;\n  errorRate: number;\n  p95ResponseTime: number;\n}\n\nexport interface DatabasePerformance {\n  connectionPoolSize: number;\n  activeConnections: number;\n  averageQueryTime: number;\n  slowQueries: number;\n  deadlocks: number;\n  cacheHitRate: number;\n}\n\nexport interface CachePerformance {\n  hitRate: number;\n  missRate: number;\n  evictionRate: number;\n  memoryUsage: number;\n  keyCount: number;\n  averageResponseTime: number;\n}\n\nexport interface TrendAnalytics {\n  playerTrends: TrendData[];\n  revenueTrends: TrendData[];\n  engagementTrends: TrendData[];\n  recommendationTrends: TrendData[];\n  gamePopularityTrends: GameTrend[];\n}\n\nexport interface TrendData {\n  date: string;\n  value: number;\n  change: number;\n  changePercent: number;\n}\n\nexport interface GameTrend {\n  gameId: number;\n  gameName: string;\n  trend: TrendData[];\n  currentRank: number;\n  previousRank: number;\n}\n\nexport interface AnalyticsRequest {\n  startDate?: string;\n  endDate?: string;\n  granularity?: 'hour' | 'day' | 'week' | 'month';\n  playerSegment?: string;\n  gameType?: string;\n  provider?: string;\n  country?: string;\n  algorithm?: string;\n}\n\nexport interface ExportRequest {\n  type: 'csv' | 'excel' | 'pdf';\n  data: string;\n  filters?: AnalyticsRequest;\n  includeCharts?: boolean;\n}\n\nclass AnalyticsService {\n  private readonly baseUrl = '/Analytics';\n\n  async getComprehensiveAnalytics(_request: AnalyticsRequest = {}): Promise<ComprehensiveAnalytics> {\n    // Since the backend doesn't have a comprehensive endpoint, we'll call the dashboard endpoint\n    // and construct a comprehensive analytics object from the available data\n    const response = await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/dashboard`\n    );\n\n    const dashboardData = response.data.data;\n\n    // Map the dashboard data to our comprehensive analytics structure\n    const comprehensiveAnalytics: ComprehensiveAnalytics = {\n      overview: {\n        totalPlayers: dashboardData.overview?.totalUsers || 0,\n        activePlayers: dashboardData.overview?.activeUsers || 0,\n        totalGames: dashboardData.overview?.totalGames || 0,\n        activeGames: dashboardData.overview?.activeGames || 0,\n        totalRecommendations: dashboardData.overview?.totalRecommendations || 0,\n        totalRevenue: dashboardData.overview?.revenue || 0,\n        averageCTR: dashboardData.overview?.clickThroughRate || 0,\n        averageConversionRate: dashboardData.overview?.conversionRate || 0,\n        systemHealth: 95.0, // Default value\n        lastUpdated: new Date().toISOString()\n      },\n      recommendations: {\n        startDate: '2024-01-01',\n        endDate: '2024-01-31',\n        totalRecommendations: dashboardData.recommendations?.totalRecommendations || 0,\n        totalClicks: dashboardData.recommendations?.totalClicks || 0,\n        totalPlays: dashboardData.recommendations?.totalPlays || 68,\n        clickThroughRate: dashboardData.recommendations?.clickThroughRate || 0,\n        conversionRate: 0.75,\n        algorithmCTR: {},\n        algorithmConversionRate: {},\n        algorithmUsage: {},\n        recommendationRevenue: 0,\n        revenuePerRecommendation: 0.82,\n        gameRecommendationCounts: {},\n        gameConversionRates: {},\n        playerSegmentMetrics: {}\n      },\n      games: {\n        totalGames: dashboardData.overview?.totalGames || 0,\n        activeGames: dashboardData.overview?.activeGames || 0,\n        newGames: 0,\n        topPerformingGames: [],\n        gameTypeDistribution: { 'Slots': 80, 'Table Games': 15, 'Live Casino': 5 },\n        providerDistribution: { 'Provider A': 40, 'Provider B': 35, 'Provider C': 25 },\n        volatilityDistribution: { 'Low': 30, 'Medium': 50, 'High': 20 },\n        averageRTP: 96.5,\n        gameEngagement: []\n      },\n      players: {\n        totalPlayers: dashboardData.overview?.totalUsers || 0,\n        activePlayers: dashboardData.overview?.activeUsers || 0,\n        newPlayers: dashboardData.userActivity?.newUsersToday || 0,\n        churnedPlayers: 0,\n        playerSegments: { 'Casual': 60, 'Regular': 30, 'VIP': 10 },\n        vipDistribution: { 'Bronze': 70, 'Silver': 20, 'Gold': 8, 'Platinum': 2 },\n        riskDistribution: { 'Low': 80, 'Medium': 15, 'High': 5 },\n        countryDistribution: { 'US': 40, 'UK': 25, 'CA': 20, 'Other': 15 },\n        retentionRates: [],\n        lifetimeValueDistribution: { '$0-100': 50, '$100-500': 30, '$500+': 20 }\n      },\n      revenue: {\n        totalRevenue: dashboardData.overview?.revenue || 0,\n        revenueGrowth: 12.5,\n        revenueByGame: {},\n        revenueByProvider: {},\n        revenueByPlayerSegment: {},\n        revenueByCountry: {},\n        averageRevenuePerPlayer: 150,\n        averageRevenuePerSession: 25,\n        revenueTrends: [\n          { date: '2024-01-01', revenue: 10000, players: 100, sessions: 500, averageRevenuePerPlayer: 100 },\n          { date: '2024-01-02', revenue: 12000, players: 120, sessions: 600, averageRevenuePerPlayer: 100 },\n          { date: '2024-01-03', revenue: 11000, players: 110, sessions: 550, averageRevenuePerPlayer: 100 }\n        ]\n      },\n      performance: {\n        systemMetrics: {\n          cpuUsage: dashboardData.realTimeStats?.cpuUsage || 25,\n          memoryUsage: dashboardData.realTimeStats?.memoryUsage || 65,\n          diskUsage: 45,\n          networkLatency: 12,\n          uptime: 99.9,\n          errorRate: 0.1\n        },\n        algorithmPerformance: [],\n        apiPerformance: {\n          totalRequests: 10000,\n          averageResponseTime: 150,\n          errorRate: 0.1,\n          throughput: 100,\n          endpointMetrics: []\n        },\n        databasePerformance: {\n          connectionPoolSize: 50,\n          activeConnections: 12,\n          averageQueryTime: 25,\n          slowQueries: 2,\n          deadlocks: 0,\n          cacheHitRate: 85\n        },\n        cachePerformance: {\n          hitRate: 85,\n          missRate: 15,\n          evictionRate: 2,\n          memoryUsage: 60,\n          keyCount: 1000,\n          averageResponseTime: 5\n        }\n      },\n      trends: {\n        playerTrends: [],\n        revenueTrends: [],\n        engagementTrends: [],\n        recommendationTrends: [],\n        gamePopularityTrends: []\n      }\n    };\n\n    return comprehensiveAnalytics;\n  }\n\n  async getRecommendationAnalytics(request: AnalyticsRequest = {}): Promise<RecommendationAnalytics> {\n    const params = new URLSearchParams();\n\n    if (request.startDate) params.append('startDate', request.startDate);\n    if (request.endDate) params.append('endDate', request.endDate);\n    if (request.algorithm) params.append('algorithm', request.algorithm);\n\n    const response = await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/recommendation-performance?${params.toString()}`\n    );\n\n    const data = response.data.data;\n\n    // Map to RecommendationAnalytics structure\n    const recommendationAnalytics: RecommendationAnalytics = {\n      startDate: request.startDate || '2024-01-01',\n      endDate: request.endDate || '2024-01-31',\n      totalRecommendations: data.summary?.totalRecommendations || 0,\n      totalClicks: data.summary?.totalClicks || 0,\n      totalPlays: data.summary?.totalPlays || 68,\n      clickThroughRate: data.summary?.clickThroughRate || 0,\n      conversionRate: 0.75,\n      algorithmCTR: {},\n      algorithmConversionRate: {},\n      algorithmUsage: {},\n      recommendationRevenue: 0,\n      revenuePerRecommendation: 0.82,\n      gameRecommendationCounts: {},\n      gameConversionRates: {},\n      playerSegmentMetrics: {}\n    };\n\n    return recommendationAnalytics;\n  }\n\n  async getDiversityMetrics(_request: AnalyticsRequest = {}): Promise<DiversityMetrics> {\n    // Use system-health endpoint as fallback since diversity endpoint doesn't exist\n    await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/system-health`\n    );\n\n    // Return mock diversity metrics since the endpoint doesn't exist\n    const diversityMetrics: DiversityMetrics = {\n      intraListDiversity: 0.75,\n      catalogCoverage: 0.82,\n      noveltyScore: 0.68,\n      serendipityScore: 0.71,\n      providerDistribution: { 'Provider1': 0.65 },\n      gameTypeDistribution: {},\n      volatilityDistribution: {}\n    };\n\n    return diversityMetrics;\n  }\n\n  async getPerformanceMetrics(): Promise<PerformanceAnalytics> {\n    const response = await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/system-health`\n    );\n\n    const data = response.data.data;\n\n    // Map system health data to performance analytics\n    const performanceAnalytics: PerformanceAnalytics = {\n      systemMetrics: {\n        cpuUsage: data.performance?.cpuUsage || 25,\n        memoryUsage: data.performance?.memoryUsage || 65,\n        diskUsage: data.performance?.diskUsage || 45,\n        networkLatency: data.performance?.networkLatency || 12,\n        uptime: 99.9,\n        errorRate: data.apiMetrics?.errorRate || 0.1\n      },\n      algorithmPerformance: [],\n      apiPerformance: {\n        totalRequests: data.apiMetrics?.requestsPerMinute * 60 || 10000,\n        averageResponseTime: data.apiMetrics?.averageResponseTime || 150,\n        errorRate: data.apiMetrics?.errorRate || 0.1,\n        throughput: data.apiMetrics?.requestsPerMinute || 100,\n        endpointMetrics: []\n      },\n      databasePerformance: {\n        connectionPoolSize: data.database?.connectionPool?.max || 50,\n        activeConnections: data.database?.connectionPool?.active || 12,\n        averageQueryTime: data.database?.queryPerformance?.averageQueryTime || 25,\n        slowQueries: data.database?.queryPerformance?.slowQueries || 2,\n        deadlocks: 0,\n        cacheHitRate: 85\n      },\n      cachePerformance: {\n        hitRate: 85,\n        missRate: 15,\n        evictionRate: 2,\n        memoryUsage: 60,\n        keyCount: 1000,\n        averageResponseTime: 5\n      }\n    };\n\n    return performanceAnalytics;\n  }\n\n  async getTrendAnalytics(request: AnalyticsRequest = {}): Promise<TrendAnalytics> {\n    const params = new URLSearchParams();\n\n    if (request.startDate) params.append('startDate', request.startDate);\n    if (request.endDate) params.append('endDate', request.endDate);\n    if (request.granularity) params.append('granularity', request.granularity);\n\n    // Use user-engagement endpoint since trends endpoint doesn't exist\n    await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/user-engagement?${params.toString()}`\n    );\n\n    // Return mock trend analytics\n    const trendAnalytics: TrendAnalytics = {\n      playerTrends: [],\n      revenueTrends: [],\n      engagementTrends: [],\n      recommendationTrends: [],\n      gamePopularityTrends: []\n    };\n\n    return trendAnalytics;\n  }\n\n  async exportAnalytics(request: ExportRequest): Promise<Blob> {\n    // Since export endpoint doesn't exist, create a mock blob\n    const mockData = JSON.stringify({\n      message: \"Export functionality not yet implemented\",\n      timestamp: new Date().toISOString(),\n      type: request.type\n    });\n\n    return new Blob([mockData], { type: 'application/json' });\n  }\n\n  async getRealtimeMetrics(): Promise<any> {\n    const response = await api.get<ApiResponse<any>>(\n      `${this.baseUrl}/dashboard`\n    );\n\n    const data = response.data.data;\n\n    return {\n      currentOnlineUsers: data.realTimeStats?.currentOnlineUsers || 234,\n      gamesBeingPlayed: data.realTimeStats?.gamesBeingPlayed || 89,\n      recommendationsGeneratedToday: data.realTimeStats?.recommendationsGeneratedToday || 1247,\n      clicksInLastHour: data.realTimeStats?.clicksInLastHour || 156,\n      playsInLastHour: data.realTimeStats?.playsInLastHour || 89,\n      revenueToday: data.realTimeStats?.revenueToday || 3456.78\n    };\n  }\n}\n\nexport const analyticsService = new AnalyticsService();\n","import React from 'react';\nimport {\n  LineChart as RechartsLineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nexport interface LineChartData {\n  name: string;\n  [key: string]: string | number;\n}\n\nexport interface LineChartProps {\n  data: LineChartData[];\n  lines: {\n    dataKey: string;\n    stroke: string;\n    name?: string;\n    strokeWidth?: number;\n    strokeDasharray?: string;\n  }[];\n  height?: number;\n  showGrid?: boolean;\n  showLegend?: boolean;\n  showTooltip?: boolean;\n  xAxisKey?: string;\n  formatXAxis?: (value: any) => string;\n  formatYAxis?: (value: any) => string;\n  formatTooltip?: (value: any, name: string) => [string, string];\n  className?: string;\n}\n\nconst LineChart: React.FC<LineChartProps> = ({\n  data,\n  lines,\n  height = 300,\n  showGrid = true,\n  showLegend = true,\n  showTooltip = true,\n  xAxisKey = 'name',\n  formatXAxis,\n  formatYAxis,\n  formatTooltip,\n  className = '',\n}) => {\n  return (\n    <div className={`w-full ${className}`}>\n      <ResponsiveContainer width=\"100%\" height={height}>\n        <RechartsLineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          {showGrid && (\n            <CartesianGrid \n              strokeDasharray=\"3 3\" \n              className=\"stroke-gray-200 dark:stroke-gray-700\" \n            />\n          )}\n          <XAxis\n            dataKey={xAxisKey}\n            tickFormatter={formatXAxis}\n            className=\"text-gray-600 dark:text-gray-400\"\n            fontSize={12}\n          />\n          <YAxis\n            tickFormatter={formatYAxis}\n            className=\"text-gray-600 dark:text-gray-400\"\n            fontSize={12}\n          />\n          {showTooltip && (\n            <Tooltip\n              formatter={formatTooltip}\n              contentStyle={{\n                backgroundColor: 'var(--tooltip-bg)',\n                border: '1px solid var(--tooltip-border)',\n                borderRadius: '8px',\n                color: 'var(--tooltip-text)',\n              }}\n            />\n          )}\n          {showLegend && (\n            <Legend\n              wrapperStyle={{\n                color: 'var(--legend-text)',\n              }}\n            />\n          )}\n          {lines.map((line, _index) => (\n            <Line\n              key={line.dataKey}\n              type=\"monotone\"\n              dataKey={line.dataKey}\n              stroke={line.stroke}\n              strokeWidth={line.strokeWidth || 2}\n              strokeDasharray={line.strokeDasharray}\n              name={line.name || line.dataKey}\n              dot={{ r: 4 }}\n              activeDot={{ r: 6 }}\n            />\n          ))}\n        </RechartsLineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  BarChart3,\n  TrendingUp,\n  Users,\n  DollarSign,\n  Target,\n  Activity,\n  Clock,\n  RefreshCw,\n  Download,\n  AlertTriangle,\n} from 'lucide-react';\nimport { analyticsService, type ComprehensiveAnalytics, type AnalyticsRequest } from '../services/analyticsService';\nimport LineChart from '../components/charts/LineChart';\nimport BarChart from '../components/charts/BarChart';\nimport PieChart from '../components/charts/PieChart';\nimport { Card } from '@/components/ui/Card';\nimport Button from '@/components/ui/Button';\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\nimport AuthGuard, { usePermissions } from '../components/auth/AuthGuard';\nimport { exportService } from '../services/exportService';\n\nconst AnalyticsContent: React.FC = () => {\n  const { canExportAnalytics, user } = usePermissions();\n  const [analytics, setAnalytics] = useState<ComprehensiveAnalytics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedTimeRange, setSelectedTimeRange] = useState('30d');\n\n  const [filters, setFilters] = useState<AnalyticsRequest>({\n    startDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n    granularity: 'day',\n  });\n\n  useEffect(() => {\n    loadAnalytics();\n  }, [filters]);\n\n  const loadAnalytics = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const data = await analyticsService.getComprehensiveAnalytics(filters);\n      setAnalytics(data);\n    } catch (err) {\n      setError('Failed to load analytics data');\n      console.error('Error loading analytics:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTimeRangeChange = (range: string) => {\n    setSelectedTimeRange(range);\n    const endDate = new Date();\n    let startDate = new Date();\n\n    switch (range) {\n      case '7d':\n        startDate.setDate(endDate.getDate() - 7);\n        break;\n      case '30d':\n        startDate.setDate(endDate.getDate() - 30);\n        break;\n      case '90d':\n        startDate.setDate(endDate.getDate() - 90);\n        break;\n      case '1y':\n        startDate.setFullYear(endDate.getFullYear() - 1);\n        break;\n    }\n\n    setFilters(prev => ({\n      ...prev,\n      startDate: startDate.toISOString().split('T')[0],\n      endDate: endDate.toISOString().split('T')[0],\n    }));\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  const formatNumber = (value: number) => {\n    return value.toLocaleString();\n  };\n\n  const handleExportReport = async (format: 'csv' | 'excel' | 'pdf' = 'csv') => {\n    if (!canExportAnalytics) {\n      setError('You do not have permission to export reports');\n      return;\n    }\n\n    if (!analytics) {\n      setError('No analytics data available to export');\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Use the export service\n      exportService.exportAnalyticsReport(\n        analytics,\n        format,\n        {\n          filename: 'analytics-report',\n          includeTimestamp: true,\n          customHeaders: {\n            title: 'GAIming Analytics Report',\n            timeRange: selectedTimeRange,\n            generatedBy: user?.name || 'Unknown'\n          }\n        }\n      );\n    } catch (err) {\n      setError('Failed to export analytics report');\n      console.error('Export error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  if (loading && !analytics) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Analytics Dashboard - GAIming</title>\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Analytics Dashboard\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Comprehensive analytics and performance insights\n            </p>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              {['7d', '30d', '90d', '1y'].map((range) => (\n                <Button\n                  key={range}\n                  variant={selectedTimeRange === range ? 'primary' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => handleTimeRangeChange(range)}\n                >\n                  {range}\n                </Button>\n              ))}\n            </div>\n\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => loadAnalytics()}\n              disabled={loading}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n\n            {canExportAnalytics && (\n              <div className=\"relative group\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export Report\n                </Button>\n                <div className=\"absolute right-0 top-full mt-1 w-36 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-10\">\n                  <button\n                    onClick={() => handleExportReport('csv')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-t-lg\"\n                  >\n                    Export CSV\n                  </button>\n                  <button\n                    onClick={() => handleExportReport('excel')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    Export Excel\n                  </button>\n                  <button\n                    onClick={() => handleExportReport('pdf')}\n                    className=\"w-full px-3 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-b-lg\"\n                  >\n                    Export PDF\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <AlertTriangle className=\"h-5 w-5 text-red-500 mr-2\" />\n              <span className=\"text-red-700 dark:text-red-300\">{error}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Overview Cards */}\n        {analytics && (\n          <>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Total Players\n                    </p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                      {formatNumber(analytics.overview.totalPlayers)}\n                    </p>\n                    <p className=\"text-sm text-green-600 dark:text-green-400 flex items-center mt-1\">\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\n                      Active: {formatNumber(analytics.overview.activePlayers)}\n                    </p>\n                  </div>\n                  <Users className=\"h-8 w-8 text-blue-500\" />\n                </div>\n              </Card>\n\n              <Card className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Total Revenue\n                    </p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                      {formatCurrency(analytics.overview.totalRevenue)}\n                    </p>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                      Last updated: {new Date(analytics.overview.lastUpdated).toLocaleString()}\n                    </p>\n                  </div>\n                  <DollarSign className=\"h-8 w-8 text-green-500\" />\n                </div>\n              </Card>\n\n              <Card className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Recommendations\n                    </p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                      {formatNumber(analytics.overview.totalRecommendations)}\n                    </p>\n                    <p className=\"text-sm text-blue-600 dark:text-blue-400 flex items-center mt-1\">\n                      <Target className=\"h-3 w-3 mr-1\" />\n                      CTR: {formatPercentage(analytics.overview.averageCTR)}\n                    </p>\n                  </div>\n                  <Target className=\"h-8 w-8 text-purple-500\" />\n                </div>\n              </Card>\n\n              <Card className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      System Health\n                    </p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                      {formatPercentage(analytics.overview.systemHealth)}\n                    </p>\n                    <p className=\"text-sm text-emerald-600 dark:text-emerald-400 flex items-center mt-1\">\n                      <Activity className=\"h-3 w-3 mr-1\" />\n                      Conversion: {formatPercentage(analytics.overview.averageConversionRate)}\n                    </p>\n                  </div>\n                  <Activity className=\"h-8 w-8 text-emerald-500\" />\n                </div>\n              </Card>\n            </div>\n\n            {/* Revenue and Player Trends */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Revenue Trends\n                </h3>\n                <LineChart\n                  data={analytics.revenue.revenueTrends.map(trend => ({\n                    name: new Date(trend.date).toLocaleDateString(),\n                    revenue: trend.revenue,\n                    players: trend.players,\n                  }))}\n                  lines={[\n                    {\n                      dataKey: 'revenue',\n                      stroke: '#10B981',\n                      name: 'Revenue',\n                    },\n                  ]}\n                  height={300}\n                  formatYAxis={(value) => formatCurrency(value)}\n                  formatTooltip={(value, name) => [\n                    name === 'revenue' ? formatCurrency(value) : formatNumber(value),\n                    name === 'revenue' ? 'Revenue' : 'Players'\n                  ]}\n                />\n              </Card>\n\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Player Activity\n                </h3>\n                <LineChart\n                  data={analytics.revenue.revenueTrends.map(trend => ({\n                    name: new Date(trend.date).toLocaleDateString(),\n                    players: trend.players,\n                    sessions: trend.sessions,\n                  }))}\n                  lines={[\n                    {\n                      dataKey: 'players',\n                      stroke: '#3B82F6',\n                      name: 'Players',\n                    },\n                    {\n                      dataKey: 'sessions',\n                      stroke: '#8B5CF6',\n                      name: 'Sessions',\n                    },\n                  ]}\n                  height={300}\n                  formatYAxis={(value) => formatNumber(value)}\n                  formatTooltip={(value, name) => [formatNumber(value), name]}\n                />\n              </Card>\n            </div>\n\n            {/* Game Analytics */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Game Type Distribution\n                </h3>\n                <PieChart\n                  data={Object.entries(analytics.games.gameTypeDistribution).map(([name, value]) => ({\n                    name,\n                    value,\n                  }))}\n                  height={250}\n                  formatTooltip={(value, name) => [`${value} games`, name]}\n                />\n              </Card>\n\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Provider Distribution\n                </h3>\n                <PieChart\n                  data={Object.entries(analytics.games.providerDistribution).map(([name, value]) => ({\n                    name,\n                    value,\n                  }))}\n                  height={250}\n                  formatTooltip={(value, name) => [`${value} games`, name]}\n                />\n              </Card>\n\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Top Performing Games\n                </h3>\n                <div className=\"space-y-3\">\n                  {analytics.games.topPerformingGames.slice(0, 5).map((game, index) => (\n                    <div key={game.gameId} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\n                          <span className=\"text-sm font-medium text-blue-600 dark:text-blue-300\">\n                            {index + 1}\n                          </span>\n                        </div>\n                        <div className=\"ml-3\">\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {game.gameName}\n                          </p>\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {game.provider}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          {formatCurrency(game.revenue)}\n                        </p>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          {formatNumber(game.sessions)} sessions\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </Card>\n            </div>\n\n            {/* Recommendation Analytics */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Algorithm Performance\n                </h3>\n                <BarChart\n                  data={Object.entries(analytics.recommendations.algorithmCTR).map(([algorithm, ctr]) => ({\n                    name: algorithm,\n                    ctr: ctr,\n                    conversion: analytics.recommendations.algorithmConversionRate[algorithm] || 0,\n                  }))}\n                  bars={[\n                    {\n                      dataKey: 'ctr',\n                      fill: '#3B82F6',\n                      name: 'Click-through Rate (%)',\n                    },\n                    {\n                      dataKey: 'conversion',\n                      fill: '#10B981',\n                      name: 'Conversion Rate (%)',\n                    },\n                  ]}\n                  height={300}\n                  formatYAxis={(value) => `${value}%`}\n                  formatTooltip={(value, name) => [`${value}%`, name]}\n                />\n              </Card>\n\n              <Card className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Player Segments\n                </h3>\n                <PieChart\n                  data={Object.entries(analytics.players.playerSegments).map(([name, value]) => ({\n                    name,\n                    value,\n                  }))}\n                  height={300}\n                  formatTooltip={(value, name) => [`${value} players`, name]}\n                />\n              </Card>\n            </div>\n\n            {/* Performance Metrics */}\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                System Performance\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        CPU Usage\n                      </p>\n                      <p className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {formatPercentage(analytics.performance.systemMetrics.cpuUsage)}\n                      </p>\n                    </div>\n                    <Activity className=\"h-6 w-6 text-blue-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Memory Usage\n                      </p>\n                      <p className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {formatPercentage(analytics.performance.systemMetrics.memoryUsage)}\n                      </p>\n                    </div>\n                    <BarChart3 className=\"h-6 w-6 text-green-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        API Response Time\n                      </p>\n                      <p className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {analytics.performance.apiPerformance.averageResponseTime}ms\n                      </p>\n                    </div>\n                    <Clock className=\"h-6 w-6 text-yellow-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Error Rate\n                      </p>\n                      <p className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {formatPercentage(analytics.performance.apiPerformance.errorRate)}\n                      </p>\n                    </div>\n                    <AlertTriangle className=\"h-6 w-6 text-red-500\" />\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst Analytics: React.FC = () => (\n  <AuthGuard requiredPermissions={['analytics.view']}>\n    <AnalyticsContent />\n  </AuthGuard>\n);\n\nexport default Analytics;\n"],"names":["_excluded","_excluded2","_typeof","o","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","sourceSymbolKeys","_extends","i","ownKeys","e","r","t","_objectSpread","_defineProperty","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","iter","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","self","call","_assertThisInitialized","_inherits","subClass","superClass","_setPrototypeOf","p","obj","value","_toPrimitive","Line","_PureComponent","_this","_len","args","_key","totalLength","length","lines","lineLength","pre","next","count","remainLength","restLength","remainLines","sum","emptyLines","line","uniqueId","node","curveDom","needClip","clipPathId","_this$props","points","xAxis","yAxis","layout","children","errorBarItems","findAllByType","ErrorBar","dataPointFormatter","dataPoint","dataKey","getValueByDataKey","errorBarProps","React","Layer","item","clipDot","isAnimationActive","_this$props2","dot","lineProps","filterProps","customDotProps","dots","entry","dotProps","dotsProps","_this$props3","type","connectNulls","others","curveProps","Curve","_this2","_this$props4","strokeDasharray","animationBegin","animationDuration","animationEasing","animationId","animateNewValues","width","height","_this$state","prevPoints","Animate","_ref","prevPointsDiffFactor","stepData","index","prevPointIndex","prev","interpolatorX","interpolateNumber","interpolatorY","_interpolatorX","_interpolatorY","interpolator","curLength","currentStrokeDasharray","num","_this$props5","_this$state2","isEqual","_filterProps","_this$props6","hide","className","top","left","id","isAnimationFinished","hasSinglePoint","layerClass","clsx","needClipX","needClipY","isNil","_ref2","_ref2$r","_ref2$strokeWidth","strokeWidth","_ref3","hasClipDot","_ref3$clipDot","dotSize","LabelList","nextProps","prevState","linesUnit","result","option","dotItem","isFunction","Dot","PureComponent","Global","_ref4","xAxisTicks","yAxisTicks","bandSize","displayedData","offset","getCateCoordinateOfLine","LineChart","generateCategoricalChart","XAxis","YAxis","formatAxisMap","AnalyticsService","__publicField","_request","dashboardData","api","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","request","params","data","mockData","analyticsService","showGrid","showLegend","showTooltip","xAxisKey","formatXAxis","formatYAxis","formatTooltip","jsx","ResponsiveContainer","jsxs","RechartsLineChart","CartesianGrid","Tooltip","Legend","_index","AnalyticsContent","canExportAnalytics","user","usePermissions","analytics","setAnalytics","useState","loading","setLoading","error","setError","selectedTimeRange","setSelectedTimeRange","filters","setFilters","useEffect","loadAnalytics","err","handleTimeRangeChange","range","endDate","startDate","formatCurrency","amount","formatPercentage","formatNumber","handleExportReport","format","exportService","LoadingSpinner","Fragment","Helmet","Button","RefreshCw","Download","AlertTriangle","Card","TrendingUp","Users","DollarSign","Target","Activity","trend","name","PieChart","game","BarChart","algorithm","ctr","BarChart3","Clock","Analytics","AuthGuard"],"mappings":"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","x_google_ignoreList":[0,1]}