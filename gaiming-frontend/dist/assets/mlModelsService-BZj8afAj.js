var r=Object.defineProperty;var i=(t,a,e)=>a in t?r(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e;var o=(t,a,e)=>i(t,typeof a!="symbol"?a+"":a,e);import{b as s}from"./api-DLjschmT.js";class p{constructor(){o(this,"baseUrl","/MLModels")}async getModels(a={}){const e=new URLSearchParams;return a.page&&e.append("page",a.page.toString()),a.pageSize&&e.append("pageSize",a.pageSize.toString()),a.search&&e.append("search",a.search),a.modelType&&e.append("modelType",a.modelType),a.status&&e.append("status",a.status),a.algorithm&&e.append("algorithm",a.algorithm),a.createdBy&&e.append("createdBy",a.createdBy),a.sortBy&&e.append("sortBy",a.sortBy),a.sortDirection&&e.append("sortDirection",a.sortDirection),(await s.get(`${this.baseUrl}?${e.toString()}`)).data.data}async getModel(a){return(await s.get(`${this.baseUrl}/${a}`)).data.data}async createModel(a){return(await s.post(`${this.baseUrl}`,a)).data.data}async updateModel(a,e){return(await s.put(`${this.baseUrl}/${a}`,e)).data.data}async deleteModel(a){await s.delete(`${this.baseUrl}/${a}`)}async getModelPerformance(a){return(await s.get(`${this.baseUrl}/${a}/performance`)).data.data}async trainModel(a){return(await s.post(`${this.baseUrl}/${a.modelId}/train`,a)).data.data}async getTrainingJobs(a){const e=a?`${this.baseUrl}/${a}/training-jobs`:`${this.baseUrl}/training-jobs`;return(await s.get(e)).data.data}async getTrainingJob(a){return(await s.get(`${this.baseUrl}/training-jobs/${a}`)).data.data}async deployModel(a){return(await s.post(`${this.baseUrl}/${a.modelId}/deploy`,a)).data.data}async getDeployments(a){const e=a?`${this.baseUrl}/${a}/deployments`:`${this.baseUrl}/deployments`;return(await s.get(e)).data.data}async compareModels(a){return(await s.post(`${this.baseUrl}/compare`,{modelIds:a})).data.data}async getABTests(){return(await s.get(`${this.baseUrl}/ab-tests`)).data.data}async createABTest(a){return(await s.post(`${this.baseUrl}/ab-tests`,a)).data.data}async getModelMonitoring(a){return(await s.get(`${this.baseUrl}/${a}/monitoring`)).data.data}}const l=new p;export{l as m};
//# sourceMappingURL=mlModelsService-BZj8afAj.js.map
